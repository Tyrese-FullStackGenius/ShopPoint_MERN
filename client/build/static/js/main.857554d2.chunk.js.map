{"version":3,"sources":["assests/confirmation.png","store.js","reducers/productReducers.js","constants/productConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox/SearchBox.js","components/Header/index.js","components/Footer/Footer.js","actions/productAction.js","components/Rating/Rating.js","components/Product/Product.js","components/Filter/Filter.js","components/Message/errorMessage.js","components/Loader/HomeLoader.js","components/Meta/Meta.js","pages/Home.js","components/ProductReview/ProductReview.js","components/Loader/SinglePageLoader.js","actions/cartAction.js","pages/Product.js","components/FormContainer/FormContainer.js","pages/Login.js","actions/userAction.js","pages/Cart.js","routes/PrivateRoute.js","routes/AdminRoute.js","components/CheckoutStep/CheckoutSteps.js","pages/Shipping.js","pages/Payment.js","components/Loader/TableLoader.js","components/Print/Print.js","pages/Profile.js","actions/orderAction.js","pages/PlaceOrder.js","pages/OrdersList.js","components/Message/successMessage.js","pages/ProductList.js","pages/UserList.js","pages/EditUser.js","pages/EditProduct.js","components/InfoMessage/Message.js","components/Loader/Loader.js","components/Loader/OrderLoader.js","pages/Order.js","pages/Logout.js","pages/Register.js","pages/ForgotPassword.js","pages/ResetPassword.js","pages/EmailVerification.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","productList","state","products","action","type","loading","payload","count","totalProduct","success","error","Product","product","productReview","productReviews","totalReview","userLogin","userInfo","userRegister","message","createReview","cart","cartItems","shippingAddress","paymentMethod","item","existItem","find","x","productId","map","filter","createOrder","order","orderDetails","orderPay","orderDeliver","authOrders","orders","total","orderList","data","totalOrders","deleteProduct","createProductDetails","updateProductDetails","userList","users","totalUser","userDeleteDetails","userUpdateDetails","userDetails","user","forgotPasswordDetails","resetPasswordDetails","initialState","localStorage","getItem","JSON","parse","store","createStore","applyMiddleware","thunk","SearchBox","useState","searchKey","setSearchKey","history","useHistory","Form","inline","onSubmit","e","preventDefault","push","FormControl","name","onChange","target","value","placeholder","className","Header","userAuthData","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","length","reduce","acc","qty","NavDropdown","title","Item","role","Footer","Row","Col","dispatch","a","axios","get","then","resp","response","Rating","text","color","style","defaultProps","Card","_id","Img","src","productImage","Body","Title","as","Text","averageRating","Reviews","price","useStyles","makeStyles","theme","typography","padding","spacing","formControl","margin","minWidth","top","selectEmpty","marginTop","Filtetr","setCategory","sort","handleSort","setPriceRange","setLtORgt","ltORgt","handlePriceRange","classes","anchorEl","setAnchorEl","open","Boolean","undefined","Button","aria-describedby","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","FormControlLabel","control","Checkbox","checked","includes","inputProps","label","InputLabel","Select","labelId","MenuItem","TextField","autoComplete","required","ErrorMessage","header","reset","show","setShow","useDispatch","position","right","zIndex","Toast","delay","autohide","background","fontWeight","HomeLoader","Array","fill","index","key","sm","md","lg","xl","height","width","Meta","description","keywords","Helmet","content","Home","setSort","category","priceRange","initialLoading","setInitialLoading","queryParams","URLSearchParams","window","location","search","searchProductKey","trim","useEffect","fetchProductList","queryString","join","Number","results","productAction","Filter","s","concat","prgressColor","ProductReview","setTitle","setText","rating","setRating","productReviewsData","reviewResponses","createReviewSuccess","createReviewLoading","ListGroup","review","userId","createdAt","substring","getState","config","headers","Authorization","token","post","fullWidth","autoWidth","disabled","CircularProgress","SinglePageLoader","addToCart","productName","countInStock","setItem","stringify","left","ProductDetails","match","setQty","productData","createReviewError","params","Image","alt","fluid","keys","FormContainer","children","xs","Login","email","setEmail","password","setPassword","redirect","split","authData","userAction","autoFocus","Cart","removeFromCartHandler","removeItemFromCart","rounded","toFixed","PrivateRoutes","Component","component","rest","render","props","AdminRoute","CheckoutSteps","step1","step2","step3","Shipping","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentMethod","setPaymentMethod","FormLabel","RadioGroup","aria-label","Radio","TableLoader","Table","striped","bordered","hover","responsive","Print","printAs","pdfMake","vfs","pdfFonts","Profile","verify","docDefinition","table","widths","body","bold","marginBottom","stack","layout","hLineWidth","line","vLineWidth","paddingBottom","border","headerRows","fillColor","o","i","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","fontSize","alignment","styles","mainheader","usersOrders","marginLeft","h2","createPdf","download","PlaceOrder","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","orderData","orderItems","shipping","payment","removeItem","OrderList","SuccessMessage","ProductList","deleteProductData","deleteSuccess","deleteFail","createSuccess","createFail","createLoading","setName","setProductImage","brand","setBrand","setPrice","setCountInStock","setDescription","openForm","setOpenForm","listProductsForAdmin","cancelCreateProduct","submitHandler","formData","FormData","append","createProduct","deleteHandler","confirmAlert","customUI","delete","Modal","size","aria-labelledby","centered","files","multiline","rows","openNewProductForm","UserList","userListDetails","userDelete","u","href","UpdateUser","updateLoading","updateError","updateSuccess","setRole","Success","setSuccess","updatedData","put","confirmationImg","ConfirmedAlert","EditProduct","EditProductLoading","EditProductError","EditProductSuccess","UpdatedData","Message","Alert","Loader","Spinner","animation","display","Order","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","appendChild","paypal","getOrder","OrderLoader","amount","onSuccess","paymentResult","payOrder","deliverOrder","Logout","Register","verificationMessage","setVerificationMessage","confirmPassword","setConfirmPassword","userRegisterData","setTimeout","redirectUrl","handleSubmit","registerData","consfirmMessage","ForgotPassword","confirmMessage","newPassword","setNewPassword","setToken","resetPasswordData","EmailVerification","verificationCode","setVerificationCode","code","App","exact","path","ResetPassword","PrivateRoute","Payment","EditUser","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.857554d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/confirmation.31a737c5.png\";","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  listProducts,\r\n  Product,\r\n  productReview,\r\n  createReview,\r\n  deleteProduct,\r\n  createProduct,\r\n  EditProduct,\r\n} from \"./reducers/productReducers\";\r\n\r\nimport {\r\n  userLogin,\r\n  userRegister,\r\n  userList,\r\n  userDelete,\r\n  userUpdate,\r\n  getUser,\r\n  forgotPassword,\r\n  resetPassword,\r\n} from \"./reducers/userReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\nimport {\r\n  createOrderReducer,\r\n  getOrder,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  authOrders,\r\n  listOrders,\r\n} from \"./reducers/orderReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  productList: listProducts,\r\n  Product: Product,\r\n  productReview: productReview,\r\n  userLogin: userLogin,\r\n  userRegister: userRegister,\r\n  createReview: createReview,\r\n  cart: cartReducer,\r\n  createOrder: createOrderReducer,\r\n  orderDetails: getOrder,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  authOrders: authOrders,\r\n  orderList: listOrders,\r\n  deleteProduct: deleteProduct,\r\n  createProductDetails: createProduct,\r\n  updateProductDetails: EditProduct,\r\n  userList: userList,\r\n  userDeleteDetails: userDelete,\r\n  userUpdateDetails: userUpdate,\r\n  userDetails: getUser,\r\n  forgotPasswordDetails: forgotPassword,\r\n  resetPasswordDetails: resetPassword,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\r\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\r\n  : [];\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem(\"shippingAddress\")\r\n  ? JSON.parse(localStorage.getItem(\"shippingAddress\"))\r\n  : {};\r\n\r\nconst paymentMethodAddressFromStorage = localStorage.getItem(\"paymentMethod\")\r\n  ? JSON.parse(localStorage.getItem(\"paymentMethod\"))\r\n  : \"\";\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n    paymentMethod: paymentMethodAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst store = createStore(rootReducer, initialState, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import * as productConstants from \"../constants/productConstants\";\r\n\r\nexport const listProducts = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case productConstants.PRODUCTLIST_FETCH_START:\r\n      return {\r\n        loading: true,\r\n        products: [],\r\n      };\r\n    case productConstants.PRODUCTLIST_FETCH_SUCCESS:\r\n      return {\r\n        products: action.payload.productList,\r\n        count: action.payload.totalProduct,\r\n        success: true,\r\n      };\r\n    case productConstants.PRODUCTLIST_FETCH_ERROR:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const Product = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case productConstants.PRODUCT_FETCH_START:\r\n      return {\r\n        loading: true,\r\n        product: {},\r\n      };\r\n    case productConstants.PRODUCT_FETCH_SUCCESS:\r\n      return {\r\n        product: action.payload,\r\n        success: true,\r\n      };\r\n    case productConstants.PRODUCT_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReview = (state = { productReviews: [] }, action) => {\r\n  switch (action.type) {\r\n    case productConstants.PRODUCTREVIEW_FETCH_START:\r\n      return {\r\n        loading: true,\r\n        productReviews: [],\r\n      };\r\n    case productConstants.PRODUCTREVIEW_FETCH_SUCCESS:\r\n      return {\r\n        productReviews: action.payload.productReviews,\r\n        count: action.payload.totalReview,\r\n        success: true,\r\n      };\r\n    case productConstants.PRODUCT_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createReview = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case productConstants.CREATE_REVIEW_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case productConstants.CREATE_REVIEW_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case productConstants.CREATE_REVIEW_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case productConstants.CREATE_REVIEW_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case productConstants.DELETE_PRODUCT_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case productConstants.DELETE_PRODUCT_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case productConstants.DELETE_PRODUCT_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    case productConstants.DELETE_PRODUCT_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createProduct = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case productConstants.CREATE_PRODUCT_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case productConstants.CREATE_PRODUCT_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case productConstants.CREATE_PRODUCT_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    case productConstants.CREATE_PRODUCT_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const EditProduct = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case productConstants.EDIT_PRODUCT_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case productConstants.EDIT_PRODUCT_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case productConstants.EDIT_PRODUCT_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case productConstants.EDIT_PRODUCT_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const PRODUCTLIST_FETCH_START = \"PRODUCTLIST_FETCH_START\";\r\nexport const PRODUCTLIST_FETCH_SUCCESS = \"PRODUCTLIST_FETCH_SUCCESS\";\r\nexport const PRODUCTLIST_FETCH_ERROR = \"PRODUCTLIST_FETCH_ERROR\";\r\n\r\nexport const PRODUCT_FETCH_START = \"PRODUCT_FETCH_START\";\r\nexport const PRODUCT_FETCH_SUCCESS = \"PRODUCT_FETCH_SUCCESS\";\r\nexport const PRODUCT_FETCH_FAIL = \"PRODUCT_FETCH_FAIL\";\r\n\r\nexport const PRODUCTREVIEW_FETCH_START = \"PRODUCTREVIEW_FETCH_START\";\r\nexport const PRODUCTREVIEW_FETCH_SUCCESS = \"PRODUCTREVIEW_FETCH_SUCCESS\";\r\nexport const PRODUCTREVIEW_FETCH_FAIL = \"PRODUCTREVIEW_FETCH_FAIL\";\r\n\r\nexport const CREATE_REVIEW_START = \"CREATE_REVIEW_START\";\r\nexport const CREATE_REVIEW_SUCCESS = \"CREATE_REVIEW_SUCCESS\";\r\nexport const CREATE_REVIEW_FAIL = \"CREATE_REVIEW_FAIL\";\r\nexport const CREATE_REVIEW_RESET = \"CREATE_REVIEW_RESET\";\r\n\r\nexport const DELETE_PRODUCT_START = \"DELETE_PRODUCT_START\";\r\nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\";\r\nexport const DELETE_PRODUCT_FAIL = \"DELETE_PRODUCT_FAIL\";\r\nexport const DELETE_PRODUCT_RESET = \"DELETE_PRODUCT_RESET\";\r\n\r\nexport const CREATE_PRODUCT_START = \"CREATE_PRODUCT_START\";\r\nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\";\r\nexport const CREATE_PRODUCT_FAIL = \"CREATE_PRODUCT_FAIL\";\r\nexport const CREATE_PRODUCT_RESET = \"CREATE_PRODUCT_RESET\";\r\n\r\nexport const EDIT_PRODUCT_START = \"EDIT_PRODUCT_START\";\r\nexport const EDIT_PRODUCT_SUCCESS = \"EDIT_PRODUCT_SUCCESS\";\r\nexport const EDIT_PRODUCT_FAIL = \"EDIT_PRODUCT_FAIL\";\r\nexport const EDIT_PRODUCT_RESET = \"EDIT_PRODUCT_RESET\";\r\n","import * as userConstants from \"../constants/userConstants\";\r\n\r\nexport const userLogin = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_AUTH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USER_AUTH_SUCCESS:\r\n      return {\r\n        userInfo: action.payload,\r\n        success: true,\r\n      };\r\n    case userConstants.USER_AUTH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegister = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_REGISTER_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USER_REGISTER_SUCCESS:\r\n      return {\r\n        message: action.payload,\r\n        success: true,\r\n      };\r\n    case userConstants.USER_REGISTER_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.USER_REGISTER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userList = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USERLIST_FETCH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USERLIST_FETCH_SUCCESS:\r\n      return {\r\n        users: action.payload.userList,\r\n        count: action.payload.totalUser,\r\n        success: true,\r\n      };\r\n    case userConstants.USERLIST_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDelete = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_DELETE_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USER_DELETE_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case userConstants.USER_DELETE_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.USER_DELETE_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdate = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_EDIT_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USER_EDIT_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case userConstants.USER_EDIT_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.USER_EDIT_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getUser = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case userConstants.USER_FETCH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.USER_FETCH_SUCCESS:\r\n      return {\r\n        success: true,\r\n        user: action.payload,\r\n      };\r\n    case userConstants.USER_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.USER_FETCH_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const forgotPassword = (state = { message: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case userConstants.FORGOT_PASSWORD_SEND_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.FORGOT_PASSWORD_SEND_SUCCESS:\r\n      return {\r\n        success: true,\r\n        message: action.payload,\r\n      };\r\n    case userConstants.FORGOT_PASSWORD_SEND_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.FORGOT_PASSWORD_SEND_RSET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const resetPassword = (state = { message: \"\" }, action) => {\r\n  switch (action.type) {\r\n    case userConstants.RESET_PASSWORD_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case userConstants.RESET_PASSWORD_SUCCESS:\r\n      return {\r\n        success: true,\r\n        message: action.payload,\r\n      };\r\n    case userConstants.RESET_PASSWORD_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case userConstants.RESET_PASSWORD_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const USER_AUTH_START = \"USER_AUTH_START\";\r\nexport const USER_AUTH_SUCCESS = \"USER_AUTH_SUCCESS\";\r\nexport const USER_AUTH_FAIL = \"USER_AUTH_FAIL\";\r\nexport const RESET = \"RESET\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const USER_REGISTER_START = \"USER_REGISTER_START\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\nexport const USER_REGISTER_RESET = \"USER_REGISTER_RESET\";\r\n\r\nexport const USERLIST_FETCH_START = \"USERLIST_FETCH_START\";\r\nexport const USERLIST_FETCH_SUCCESS = \"USERLIST_FETCH_SUCCESS\";\r\nexport const USERLIST_FETCH_FAIL = \"USERLIST_FETCH_FAIL\";\r\n\r\nexport const USER_DELETE_START = \"USER_DELETE_START\";\r\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS\";\r\nexport const USER_DELETE_FAIL = \"USER_DELETE_FAIL\";\r\nexport const USER_DELETE_RESET = \"USER_DELETE_RESET\";\r\n\r\nexport const USER_EDIT_START = \"USER_EDIT_START\";\r\nexport const USER_EDIT_SUCCESS = \"USER_EDIT_SUCCESS\";\r\nexport const USER_EDIT_FAIL = \"USER_EDIT_FAIL\";\r\nexport const USER_EDIT_RESET = \"USER_EDIT_RESET\";\r\n\r\nexport const USER_FETCH_START = \"USER_FETCH_START\";\r\nexport const USER_FETCH_SUCCESS = \"USER_FETCH_SUCCESS\";\r\nexport const USER_FETCH_FAIL = \"USER_FETCH_FAIL\";\r\nexport const USER_FETCH_RESET = \"USER_FETCH_RESET\";\r\n\r\nexport const FORGOT_PASSWORD_SEND_START = \"FORGOT_PASSWORD_SEND_START\";\r\nexport const FORGOT_PASSWORD_SEND_SUCCESS = \"FORGOT_PASSWORD_SEND_SUCCESS\";\r\nexport const FORGOT_PASSWORD_SEND_FAIL = \"FORGOT_PASSWORD_SEND_FAIL\";\r\nexport const FORGOT_PASSWORD_SEND_RSET = \"FORGOT_PASSWORD_SEND_RSET\";\r\n\r\nexport const RESET_PASSWORD_START = \"RESET_PASSWORD_START\";\r\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\r\nexport const RESET_PASSWORD_FAIL = \"RESET_PASSWORD_FAIL\";\r\nexport const RESET_PASSWORD_RESET = \"RESET_PASSWORD_RESET\";\r\n","import * as cartConstants from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {}, paymentMethod: \"\" },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case cartConstants.ADD_TO_CART_ITEM:\r\n      const item = action.payload;\r\n\r\n      const existItem = state.cartItems.find(\r\n        (x) => x.productId === item.productId\r\n      );\r\n\r\n      if (existItem) {\r\n        return {\r\n          ...state,\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.productId === existItem.productId ? item : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          cartItems: [...state.cartItems, item],\r\n        };\r\n      }\r\n    case cartConstants.CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter(\r\n          (x) => x.productId !== action.payload\r\n        ),\r\n      };\r\n    case cartConstants.CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case cartConstants.CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    case cartConstants.CART_RESET:\r\n      return {\r\n        cartItems: [],\r\n        shippingAddress: {},\r\n        paymentMethod: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const ADD_TO_CART_ITEM = \"ADD_TO_CART_ITEM\";\r\nexport const ADD_TO_CART_FAIL = \"ADD_TO_CART_FAIL\";\r\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\r\nexport const CART_SAVE_SHIPPING_ADDRESS = \"CART_SAVE_SHIPPING_ADDRESS\";\r\nexport const CART_SAVE_PAYMENT_METHOD = \"CART_SAVE_PAYMENT_METHOD\";\r\nexport const CART_RESET = \"CART_RESET\";\r\n","import * as orderConstants from \"../constants/orderConstants\";\r\n\r\nexport const createOrderReducer = (state = { order: {} }, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.CREATE_ORDER_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.CREATE_ORDER_SUCCESS:\r\n      return {\r\n        order: action.payload,\r\n        success: true,\r\n      };\r\n    case orderConstants.CREATE_ORDER_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case orderConstants.CREATE_ORDER_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getOrder = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.GET_ORDER_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.GET_ORDER_SUCCESS:\r\n      return {\r\n        order: action.payload,\r\n        success: true,\r\n      };\r\n    case orderConstants.GET_ORDER_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.ORDER_PAY_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.ORDER_PAY_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case orderConstants.ORDER_PAY_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case orderConstants.ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.ORDER_DILIVERD_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.ORDER_DILIVERD_SUCCESS:\r\n      return {\r\n        success: true,\r\n      };\r\n    case orderConstants.ORDER_DILIVERD_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    case orderConstants.ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const authOrders = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.AUTH_ORDER_FETCH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.AUTH_ORDER_FETCH_SUCCESS:\r\n      return {\r\n        success: true,\r\n        orders: action.payload,\r\n        count: action.total,\r\n      };\r\n    case orderConstants.AUTH_ORDER_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const listOrders = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case orderConstants.ORDERLIST_FETCH_START:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case orderConstants.ORDERLIST_FETCH_SUCCESS:\r\n      return {\r\n        success: true,\r\n        orders: action.payload.data,\r\n        count: action.payload.totalOrders,\r\n      };\r\n    case orderConstants.ORDERLIST_FETCH_FAIL:\r\n      return {\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const CREATE_ORDER_START = \"CREATE_ORDER_START\";\r\nexport const CREATE_ORDER_SUCCESS = \"CREATE_ORDER_SUCCESS\";\r\nexport const CREATE_ORDER_FAIL = \"CREATE_ORDER_FAIL\";\r\nexport const CREATE_ORDER_RESET = \"CREATE_ORDER_RESET\";\r\n\r\nexport const GET_ORDER_START = \"GET_ORDER_START\";\r\nexport const GET_ORDER_SUCCESS = \"GET_ORDER_SUCCESS\";\r\nexport const GET_ORDER_FAIL = \"GET_ORDER_FAIL\";\r\n\r\nexport const ORDER_PAY_START = \"ORDER_PAY_START\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_DILIVERD_START = \"ORDER_DILIVERD_START\";\r\nexport const ORDER_DILIVERD_SUCCESS = \"ORDER_DILIVERD_SUCCESS\";\r\nexport const ORDER_DILIVERD_FAIL = \"ORDER_DILIVERD_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n\r\nexport const AUTH_ORDER_FETCH_START = \"AUTH_ORDER_FETCH_START\";\r\nexport const AUTH_ORDER_FETCH_SUCCESS = \"AUTH_ORDER_FETCH_SUCCESS\";\r\nexport const AUTH_ORDER_FETCH_FAIL = \"AUTH_ORDER_FETCH_FAIL\";\r\n\r\nexport const ORDERLIST_FETCH_START = \"ORDERLIST_FETCH_START\";\r\nexport const ORDERLIST_FETCH_SUCCESS = \"ORDERLIST_FETCH_SUCCESS\";\r\nexport const ORDERLIST_FETCH_FAIL = \"ORDERLIST_FETCH_FAIL\";\r\n","import React, { useState } from \"react\";\r\nimport { Form, FormControl } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"../style.css\";\r\nconst SearchBox = () => {\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (searchKey !== \"\") {\r\n      history.push(`/?search=${searchKey}`);\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form inline onSubmit={handleSubmit}>\r\n      <FormControl\r\n        type=\"text\"\r\n        name=\"seacrh\"\r\n        onChange={(e) => setSearchKey(e.target.value)}\r\n        placeholder=\"Search product...\"\r\n        className=\"mr-sm-2\"\r\n      />\r\n      <i className=\"fas fa-search\"></i>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SearchBox from \"../SearchBox/SearchBox\";\r\nimport \"../style.css\";\r\nconst Header = () => {\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  const { cartItems } = cart;\r\n\r\n  const { userInfo } = userAuthData;\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to=\"/\">\r\n            <Navbar.Brand>ShopPoint</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <SearchBox />\r\n            <Nav className=\"ml-auto\">\r\n              <LinkContainer to=\"/cart\">\r\n                <Nav.Link>\r\n                  <i className=\"fas fa-shopping-cart\"></i>{\" \"}\r\n                  {cartItems.length > 0 && (\r\n                    <span className=\"cart\">\r\n                      {cartItems.reduce((acc, item) => acc + item.qty, 0)}\r\n                    </span>\r\n                  )}\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id=\"username\">\r\n                  <LinkContainer to=\"/profile\">\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/logout\">\r\n                    <NavDropdown.Item>Logout</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to=\"/login\">\r\n                  <Nav.Link>\r\n                    <i className=\"fas fa-user\"></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.role === \"admin\" && (\r\n                <NavDropdown title=\"Admin\" id=\"adminMenu\">\r\n                  <LinkContainer to=\"/admin/userList\">\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/productList\">\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to=\"/admin/orderList\">\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className=\"text-center py-3\">Copyright &copy; ShopPoint</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nimport * as productConstants from \"../constants/productConstants\";\r\n\r\nexport const listProducts = (\r\n  searchProductKey,\r\n  sort,\r\n  category,\r\n  priceRange,\r\n  initialLoading,\r\n  ltORgt\r\n) => async (dispatch) => {\r\n  try {\r\n    if (initialLoading) {\r\n      dispatch({ type: productConstants.PRODUCTLIST_FETCH_START });\r\n    }\r\n\r\n    const queryString = [\r\n      sort.length > 0 ? `sort=${sort.join(\",\")}` : \"\",\r\n      searchProductKey !== \"\" ? `&keyWord=${searchProductKey}` : \"\",\r\n      category !== \"\" ? `&category=${category}` : \"\",\r\n      priceRange !== \"\" ? `&price[${ltORgt}]=${Number(priceRange)}` : \"\",\r\n    ];\r\n\r\n    await axios.get(`/api/v1/product/?${queryString.join(\"\")}`).then((resp) => {\r\n      const productList = resp.data.data.results;\r\n      const totalProduct = resp.data.data.count;\r\n\r\n      dispatch({\r\n        type: productConstants.PRODUCTLIST_FETCH_SUCCESS,\r\n        payload: { productList, totalProduct },\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: productConstants.PRODUCTLIST_FETCH_ERROR,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductsForAdmin = (initialLoading) => async (dispatch) => {\r\n  try {\r\n    if (initialLoading) {\r\n      dispatch({ type: productConstants.PRODUCTLIST_FETCH_START });\r\n    }\r\n\r\n    await axios.get(`/api/v1/product/`).then((resp) => {\r\n      const productList = resp.data.data.results;\r\n      const totalProduct = resp.data.data.count;\r\n\r\n      dispatch({\r\n        type: productConstants.PRODUCTLIST_FETCH_SUCCESS,\r\n        payload: { productList, totalProduct },\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: productConstants.PRODUCTLIST_FETCH_ERROR,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const product = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: productConstants.PRODUCT_FETCH_START });\r\n\r\n    await axios.get(`/api/v1/product/${id}`).then((resp) => {\r\n      const product = resp.data.data;\r\n\r\n      dispatch({\r\n        type: productConstants.PRODUCT_FETCH_SUCCESS,\r\n        payload: product,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: productConstants.PRODUCT_FETCH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const productReview = (id, initialLoading) => async (dispatch) => {\r\n  try {\r\n    if (initialLoading) {\r\n      dispatch({ type: productConstants.PRODUCTREVIEW_FETCH_START });\r\n    }\r\n    await axios.get(`/api/v1/product/${id}/reviews`).then((resp) => {\r\n      const productReviews = resp.data.data;\r\n      const totalReview = resp.data.count;\r\n\r\n      dispatch({\r\n        type: productConstants.PRODUCTREVIEW_FETCH_SUCCESS,\r\n        payload: {\r\n          productReviews,\r\n          totalReview,\r\n        },\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: productConstants.PRODUCTREVIEW_FETCH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createReview = (id, title, text, rating) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: productConstants.CREATE_REVIEW_START });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const data = {\r\n      title,\r\n      text,\r\n      rating,\r\n    };\r\n    await axios\r\n      .post(`/api/v1/product/${id}/reviews`, data, config)\r\n      .then((resp) => {\r\n        dispatch({\r\n          type: productConstants.CREATE_REVIEW_SUCCESS,\r\n        });\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: productConstants.CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: productConstants.DELETE_PRODUCT_START });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/v1/product/${id}`, config).then((resp) => {\r\n      dispatch({\r\n        type: productConstants.DELETE_PRODUCT_SUCCESS,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: productConstants.DELETE_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProduct = (formData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: productConstants.CREATE_PRODUCT_START });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(\"/api/v1/product/\", formData, config).then((resp) => {\r\n      dispatch({\r\n        type: productConstants.CREATE_PRODUCT_SUCCESS,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: productConstants.CREATE_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const EditProduct = (id, UpdatedData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: productConstants.EDIT_PRODUCT_START });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios\r\n      .put(`/api/v1/product/${id}`, UpdatedData, config)\r\n      .then((resp) => {\r\n        dispatch({\r\n          type: productConstants.EDIT_PRODUCT_SUCCESS,\r\n          payload: \"Product updated successfully\",\r\n        });\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: productConstants.EDIT_PRODUCT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className=\"rating\">\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? \"fas fa-star\"\r\n              : value >= 0.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? \"fas fa-star\"\r\n              : value >= 1.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? \"fas fa-star\"\r\n              : value >= 2.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? \"fas fa-star\"\r\n              : value >= 3.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? \"fas fa-star\"\r\n              : value >= 4.5\r\n              ? \"fas fa-star-half-alt\"\r\n              : \"far fa-star\"\r\n          }\r\n        ></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: \"#f8e825\",\r\n};\r\n\r\nexport default Rating;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Rating from \"../Rating/Rating\";\r\nimport \"animate.css\";\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className=\"my-3 p-3 rounded  animate__animated animate__fadeInUp\">\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.productImage} variant=\"top\" />\r\n      </Link>\r\n\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title as=\"div\">\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n\r\n        <Card.Text as=\"div\">\r\n          <Rating\r\n            value={product.averageRating}\r\n            text={`${product.Reviews ? product.Reviews.length : 0} reviews`}\r\n          />\r\n        </Card.Text>\r\n\r\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Checkbox, FormControlLabel, TextField } from \"@material-ui/core\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n    top: -24,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Filtetr({\r\n  setCategory,\r\n  sort,\r\n  handleSort,\r\n  setPriceRange,\r\n  setLtORgt,\r\n  ltORgt,\r\n  handlePriceRange,\r\n}) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        aria-describedby={id}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={handleClick}\r\n      >\r\n        Filter\r\n      </Button>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <Typography className={classes.typography}>\r\n          <h6>Sort By</h6>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={sort.includes(\"name\") ? true : false}\r\n                color=\"primary\"\r\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                value=\"name\"\r\n                onChange={(e) => handleSort(e.target.value)}\r\n              />\r\n            }\r\n            label=\"Name\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={sort.includes(\"price\") ? true : false}\r\n                color=\"primary\"\r\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                value=\"price\"\r\n                onChange={(e) => handleSort(e.target.value)}\r\n              />\r\n            }\r\n            label=\"Price\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                checked={sort.includes(\"averageRating\") ? true : false}\r\n                color=\"primary\"\r\n                inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                value=\"averageRating\"\r\n                onChange={(e) => handleSort(e.target.value)}\r\n              />\r\n            }\r\n            label=\"Rating\"\r\n          />\r\n\r\n          <FormControl variant=\"outlined\" className={classes.formControl}>\r\n            <InputLabel id=\"demo-simple-select-outlined-label\">\r\n              Category\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-outlined-label\"\r\n              id=\"demo-simple-select-outlined\"\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              label=\"Category\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"Shirt\">T-shirt</MenuItem>\r\n              <MenuItem value=\"Pants\">Pant</MenuItem>\r\n              <MenuItem value=\"Vest\">Vest</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <div className=\"mt-4 mb-4\">\r\n            <TextField\r\n              autoComplete=\"priceRange\"\r\n              name=\"priceRange\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              required\r\n              id=\"priceRange\"\r\n              placeholder=\"Price Range\"\r\n              label=\"Price Range\"\r\n              onChange={(e) => setPriceRange(e.target.value)}\r\n            />{\" \"}\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={ltORgt === \"lt\" ? true : false}\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  value=\"lt\"\r\n                  onChange={(e) => setLtORgt(e.target.value)}\r\n                />\r\n              }\r\n              label=\"Less than\"\r\n            />\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  checked={ltORgt === \"gte\" ? true : false}\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  value=\"gte\"\r\n                  onChange={(e) => setLtORgt(e.target.value)}\r\n                />\r\n              }\r\n              label=\"Greater Or equal to\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handlePriceRange}\r\n            >\r\n              Done\r\n            </Button>\r\n          </div>\r\n        </Typography>\r\n      </Popover>\r\n    </div>\r\n  );\r\n}\r\nexport default Filtetr;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport \"animate.css\";\r\n\r\nconst ErrorMessage = ({ header, message, reset }) => {\r\n  const [show, setShow] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const action = () => {\r\n    if (reset) {\r\n      dispatch({ type: reset });\r\n    }\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: \"fixed\", right: \"0\", zIndex: \"20180210\" }}>\r\n        <Toast\r\n          onClose={action}\r\n          show={show}\r\n          delay={3000}\r\n          autohide\r\n          className=\"animate__animated animate__shakeX\"\r\n        >\r\n          <Toast.Header\r\n            style={{ background: \"red\", color: \"white\", fontWeight: \"bold\" }}\r\n          >\r\n            <strong className=\"mr-auto\">{header}</strong>\r\n          </Toast.Header>\r\n          <Toast.Body>{message}</Toast.Body>\r\n        </Toast>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nconst HomeLoader = () => {\r\n  return (\r\n    <Row>\r\n      {Array(8)\r\n        .fill()\r\n        .map((item, index) => {\r\n          return (\r\n            <Col key={index} sm={12} md={6} lg={4} xl={3}>\r\n              <Card className=\"my-3 p-3 rounded\">\r\n                <Card.Body>\r\n                  <SkeletonTheme color=\"lightGray\">\r\n                    <Skeleton height={180} width={\"100%\"} />\r\n                    <br />\r\n\r\n                    <Skeleton width={`60%`} />\r\n                    <br />\r\n\r\n                    <Skeleton width={`90%`} />\r\n                  </SkeletonTheme>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HomeLoader;\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name=\"description\" content={description} />\r\n      <meta name=\"keyword\" content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: \"Welcome To ShopPoint\",\r\n  description: \"We sell the best products for cheap\",\r\n  keywords: \"clothes, buy readyMadeClothes, cheap latest clothes\",\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport * as productAction from \"../actions/productAction\";\r\nimport Product from \"../components/Product/Product\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport HomeLoader from \"../components/Loader/HomeLoader\";\r\nimport Meta from \"../components/Meta/Meta\";\r\n\r\nconst Home = () => {\r\n  const [sort, setSort] = useState([]);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [priceRange, setPriceRange] = useState(\"\");\r\n  const [ltORgt, setLtORgt] = useState(\"\");\r\n\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n\r\n  const { loading, products, count, error, success } = productList;\r\n\r\n  const queryParams = new URLSearchParams(window.location.search);\r\n  const searchProductKey = queryParams.get(\"search\")\r\n    ? queryParams.get(\"search\").trim()\r\n    : \"\";\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    fetchProductList();\r\n    // eslint-disable-next-line\r\n  }, [dispatch, searchProductKey, sort, category]);\r\n\r\n  const fetchProductList = () => {\r\n    dispatch(\r\n      productAction.listProducts(\r\n        searchProductKey,\r\n        sort,\r\n        category,\r\n        priceRange,\r\n        initialLoading,\r\n        ltORgt\r\n      )\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const handleSort = (value) => {\r\n    sort.includes(value)\r\n      ? setSort(sort.filter((s) => s !== value))\r\n      : setSort((sort) => sort.concat(value));\r\n  };\r\n\r\n  const handlePriceRange = () => {\r\n    if (priceRange === \"\" || ltORgt === \"\") {\r\n      return;\r\n    }\r\n    fetchProductList();\r\n  };\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {loading ? (\r\n        <HomeLoader />\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          {searchProductKey ? (\r\n            <>\r\n              <Link to=\"/\" className=\"btn btn-light\">\r\n                Go Back\r\n              </Link>\r\n              <h1>\r\n                Search Products for {searchProductKey}({count})\r\n              </h1>\r\n            </>\r\n          ) : (\r\n            <div className=\"clearfix\">\r\n              <span className=\"float-left\">\r\n                <h1>Latest Products ({count})</h1>\r\n              </span>\r\n              <span className=\"float-right\">\r\n                {\" \"}\r\n                <Filter\r\n                  setCategory={setCategory}\r\n                  sort={sort}\r\n                  handleSort={handleSort}\r\n                  setPriceRange={setPriceRange}\r\n                  setLtORgt={setLtORgt}\r\n                  ltORgt={ltORgt}\r\n                  handlePriceRange={handlePriceRange}\r\n                />\r\n              </span>\r\n            </div>\r\n          )}\r\n          {products.length === 0 && <h4>No Products</h4>}\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, ListGroup, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as productAction from \"../../actions/productAction\";\r\nimport ErrorMessage from \"../Message/errorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Rating from \"../Rating/Rating\";\r\nimport {\r\n  Select,\r\n  Button,\r\n  FormControl,\r\n  makeStyles,\r\n  MenuItem,\r\n  InputLabel,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@material-ui/core/\";\r\n\r\nimport * as productConstants from \"../../constants/productConstants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 200,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  prgressColor: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst ProductReview = ({ productId }) => {\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [rating, setRating] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const productReviewsData = useSelector((state) => state.productReview);\r\n  const reviewResponses = useSelector((state) => state.createReview);\r\n\r\n  const {\r\n    success: createReviewSuccess,\r\n    loading: createReviewLoading,\r\n  } = reviewResponses;\r\n\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userAuthData;\r\n\r\n  const { loading, productReviews, count, error, success } = productReviewsData;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (createReviewSuccess) {\r\n      setTitle(\"\");\r\n      setText(\"\");\r\n      setRating(\"\");\r\n      dispatch({ type: productConstants.CREATE_REVIEW_RESET });\r\n    }\r\n    dispatch(productAction.productReview(productId, initialLoading));\r\n    // eslint-disable-next-line\r\n  }, [dispatch, createReviewSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const handleCreateReview = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(productAction.createReview(productId, title, text, rating));\r\n  };\r\n\r\n  return loading ? (\r\n    <p>Loding....</p>\r\n  ) : error ? (\r\n    <ErrorMessage header=\"Something went wrong\" message={error} />\r\n  ) : (\r\n    <>\r\n      <Row>\r\n        <Col md={6}>\r\n          <h2>Reviews({count})</h2>\r\n          {productReviews.length === 0 && <h4>No Reviews</h4>}\r\n          <ListGroup variant=\"flush\">\r\n            {productReviews.map((review) => (\r\n              <ListGroup.Item key={review._id}>\r\n                <strong>{review.userId.name}</strong>\r\n\r\n                <Rating value={review.rating} />\r\n                <p>{review.createdAt.substring(0, 10)}</p>\r\n                <p>{review.text}</p>\r\n              </ListGroup.Item>\r\n            ))}\r\n            <ListGroup.Item>\r\n              <h2>Write a Customer Review</h2>\r\n\r\n              {userInfo ? (\r\n                <Form onSubmit={handleCreateReview}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    margin=\"normal\"\r\n                    placeholder=\"Write a title\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"title\"\r\n                    label=\"Write a title\"\r\n                    name=\"title\"\r\n                    autoComplete=\"title\"\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                  />\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    type=\"text\"\r\n                    margin=\"normal\"\r\n                    placeholder=\"Write a comment\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"comment\"\r\n                    label=\"Write a comment\"\r\n                    name=\"comment\"\r\n                    autoComplete=\"comment\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                  />\r\n\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                  >\r\n                    <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                      Rating\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-outlined-label\"\r\n                      id=\"demo-simple-select-outlined\"\r\n                      onChange={(e) => setRating(Number(e.target.value))}\r\n                      label=\"Rating\"\r\n                      autoWidth\r\n                      value={rating}\r\n                    >\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      <MenuItem value=\"1\">1 - Poor</MenuItem>\r\n                      <MenuItem value=\"2\">2 - Fair</MenuItem>\r\n                      <MenuItem value=\"3\">3 - Good</MenuItem>\r\n                      <MenuItem value=\"4\">4 - Very Good</MenuItem>\r\n                      <MenuItem value=\"5\">5 - Excellent</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <div className=\"my-3\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      disabled={createReviewLoading}\r\n                    >\r\n                      {createReviewLoading ? (\r\n                        <CircularProgress\r\n                          color=\"inherit\"\r\n                          className={classes.prgressColor}\r\n                        />\r\n                      ) : (\r\n                        <>Submit</>\r\n                      )}\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n              ) : (\r\n                <>\r\n                  Please <Link to=\"/login\">sign in</Link> to write a review{\" \"}\r\n                </>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductReview;\r\n","import React from \"react\";\r\nimport { Row, Col, ListGroup, Card } from \"react-bootstrap\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nconst SinglePageLoader = () => {\r\n  return (\r\n    <Row>\r\n      <Col md={6}>\r\n        <SkeletonTheme color=\"lightGray\">\r\n          <Skeleton height={350} width={\"100%\"} />\r\n        </SkeletonTheme>\r\n      </Col>\r\n      <Col md={3}>\r\n        <ListGroup variant=\"flush\">\r\n          {Array(7)\r\n            .fill()\r\n            .map((data, index) => (\r\n              <ListGroup.Item key={index}>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </ListGroup.Item>\r\n            ))}\r\n        </ListGroup>\r\n      </Col>\r\n      <Col md={3}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            {Array(4)\r\n              .fill()\r\n              .map((data, index) => (\r\n                <ListGroup.Item key={index}>\r\n                  <SkeletonTheme color=\"lightGray\">\r\n                    <Skeleton />\r\n                  </SkeletonTheme>\r\n                </ListGroup.Item>\r\n              ))}\r\n            <ListGroup.Item>\r\n              <SkeletonTheme color=\"lightGray\">\r\n                <Skeleton height={30} />\r\n              </SkeletonTheme>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default SinglePageLoader;\r\n","import axios from \"axios\";\r\nimport * as cartConstants from \"../constants/cartConstants\";\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  try {\r\n    await axios.get(`/api/v1/product/${id}`).then((resp) => {\r\n      const data = resp.data.data;\r\n\r\n      dispatch({\r\n        type: cartConstants.ADD_TO_CART_ITEM,\r\n        payload: {\r\n          productId: data._id,\r\n          productName: data.name,\r\n          productImage: data.productImage,\r\n          price: data.price,\r\n          countInStock: data.countInStock,\r\n          qty,\r\n        },\r\n      });\r\n    });\r\n\r\n    localStorage.setItem(\r\n      \"cartItems\",\r\n      JSON.stringify(getState().cart.cartItems)\r\n    );\r\n  } catch (error) {\r\n    dispatch({\r\n      type: cartConstants.ADD_TO_CART_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: cartConstants.CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: cartConstants.CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"shippingAddress\", JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch) => {\r\n  dispatch({\r\n    type: cartConstants.CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n\r\n  localStorage.setItem(\"paymentMethod\", JSON.stringify(data));\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, Image, ListGroup, Card } from \"react-bootstrap\";\r\nimport * as productAction from \"../actions/productAction\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport ProductReview from \"../components/ProductReview/ProductReview\";\r\nimport Rating from \"../components/Rating/Rating\";\r\nimport {\r\n  Select,\r\n  Button,\r\n  FormControl,\r\n  makeStyles,\r\n  MenuItem,\r\n} from \"@material-ui/core/\";\r\nimport * as productConstants from \"../constants/productConstants\";\r\nimport SinglePageLoader from \"../components/Loader/SinglePageLoader\";\r\nimport { addToCart } from \"../actions/cartAction\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 85,\r\n    top: -17,\r\n    left: 6,\r\n    position: \"absolute\",\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst ProductDetails = ({ match, history }) => {\r\n  const [qty, setQty] = useState(1);\r\n\r\n  const productData = useSelector((state) => state.Product);\r\n  const reviewResponses = useSelector((state) => state.createReview);\r\n\r\n  const { error: createReviewError } = reviewResponses;\r\n\r\n  const { loading, product, error } = productData;\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(productAction.product(match.params.productId));\r\n    // eslint-disable-next-line\r\n  }, [dispatch, match]);\r\n\r\n  const addToCartHandler = () => {\r\n    dispatch(addToCart(match.params.productId, qty));\r\n    history.push(\"/cart\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {createReviewError && (\r\n        <ErrorMessage\r\n          header=\"Opps!!!\"\r\n          message={createReviewError}\r\n          reset={productConstants.CREATE_REVIEW_RESET}\r\n        />\r\n      )}\r\n      <Link className=\"btn btn-light my-3\" to=\"/\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <SinglePageLoader />\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.productImage} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.averageRating}\r\n                    text={`${\r\n                      product.Reviews ? product.Reviews.length : 0\r\n                    } reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>\r\n                        {product.countInStock > 0 ? \"In Stock\" : \"Out Of Stock\"}\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n\r\n                  {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <FormControl className={classes.formControl}>\r\n                            <Select\r\n                              labelId=\"demo-simple-select-label\"\r\n                              id=\"demo-simple-select\"\r\n                              onChange={(e) => setQty(e.target.value)}\r\n                              label=\"Qty\"\r\n                              value={qty}\r\n                            >\r\n                              {[...Array(product.countInStock).keys()].map(\r\n                                (x) => (\r\n                                  <MenuItem key={x + 1} value={x + 1}>\r\n                                    {x + 1}\r\n                                  </MenuItem>\r\n                                )\r\n                              )}\r\n                            </Select>\r\n                          </FormControl>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={addToCartHandler}\r\n                      fullWidth\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <ProductReview productId={match.params.productId} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ProductDetails;\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport FormContainer from \"../components/FormContainer/FormContainer\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n} from \"@material-ui/core/\";\r\nimport * as userAction from \"../actions/userAction\";\r\nimport * as userConstants from \"../constants/userConstants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst Login = ({ location, history }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo, error, loading } = userAuthData;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [dispatch, userInfo, redirect, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userAction.auth(email, password));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorMessage\r\n          header=\"Auth Error\"\r\n          message={error}\r\n          reset={userConstants.RESET}\r\n        />\r\n      )}\r\n      <FormContainer>\r\n        <h1>Sign In</h1>\r\n\r\n        <Form onSubmit={submitHandler}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            type=\"email\"\r\n            margin=\"normal\"\r\n            placeholder=\"ex:- JohnDoe@gmail.com\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            type=\"password\"\r\n            placeholder=\"***********\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            value={password}\r\n            autoComplete=\"current-password\"\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <CircularProgress\r\n                color=\"inherit\"\r\n                className={classes.prgressColor}\r\n              />\r\n            ) : (\r\n              <>Sign In</>\r\n            )}\r\n          </Button>\r\n        </Form>\r\n\r\n        <Row className=\"py-3\">\r\n          <Col>\r\n            New Customer?\r\n            <Link\r\n              to={redirect ? `/register?redirect=${redirect}` : \"/register\"}\r\n            >\r\n              Register\r\n            </Link>\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <Link to={\"/forgotPasssword\"}>Forgot Password</Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from \"axios\";\r\nimport * as userConstants from \"../constants/userConstants\";\r\n\r\nexport const auth = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_AUTH_START });\r\n\r\n    const authData = {\r\n      email,\r\n      password,\r\n    };\r\n\r\n    await axios.post(`/api/v1/auth/login`, authData).then((resp) => {\r\n      const authData = resp.data.authData;\r\n      const token = resp.data.token;\r\n\r\n      const userInfo = {\r\n        ...authData,\r\n        token,\r\n      };\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n      dispatch({\r\n        type: userConstants.USER_AUTH_SUCCESS,\r\n        payload: userInfo,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: userConstants.USER_AUTH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const Logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"userInfo\");\r\n  dispatch({ type: userConstants.RESET });\r\n};\r\n\r\nexport const Register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_REGISTER_START });\r\n\r\n    const registerData = {\r\n      name,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    await axios.post(`/api/v1/auth/register`, registerData).then((resp) => {\r\n      const consfirmMessage = resp.data.message;\r\n\r\n      dispatch({\r\n        type: userConstants.USER_REGISTER_SUCCESS,\r\n        payload: consfirmMessage,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: userConstants.USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const emailVerification = (verificationCode) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_AUTH_START });\r\n\r\n    const code = {\r\n      verificationCode,\r\n    };\r\n\r\n    await axios.post(`/api/v1/auth/verifyEmail`, code).then((resp) => {\r\n      const authData = resp.data.authData;\r\n      const token = resp.data.token;\r\n\r\n      const userInfo = {\r\n        ...authData,\r\n        token,\r\n      };\r\n\r\n      localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n      dispatch({\r\n        type: userConstants.USER_AUTH_SUCCESS,\r\n        payload: userInfo,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: userConstants.USER_AUTH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userList = (initialLoading) => async (dispatch, getState) => {\r\n  try {\r\n    if (initialLoading) {\r\n      dispatch({ type: userConstants.USERLIST_FETCH_START });\r\n    }\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.get(`/api/v1/user`, config).then((resp) => {\r\n      const userList = resp.data.data.results;\r\n      const totalUser = resp.data.data.count;\r\n      dispatch({\r\n        type: userConstants.USERLIST_FETCH_SUCCESS,\r\n        payload: {\r\n          userList,\r\n          totalUser,\r\n        },\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: userConstants.USERLIST_FETCH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userDelete = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_DELETE_START });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/v1/user/${id}`, config).then((resp) => {\r\n      dispatch({\r\n        type: userConstants.USER_DELETE_SUCCESS,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: userConstants.USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userUpdate = (id, updatedData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_EDIT_START });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.put(`/api/v1/user/${id}`, updatedData, config).then((resp) => {\r\n      dispatch({\r\n        type: userConstants.USER_EDIT_SUCCESS,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: userConstants.USER_EDIT_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: userConstants.USER_FETCH_START });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.get(`/api/v1/user/${id}`, config).then((resp) => {\r\n      const userDetails = resp.data.data;\r\n      dispatch({\r\n        type: userConstants.USER_FETCH_SUCCESS,\r\n        payload: userDetails,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: userConstants.USER_FETCH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.FORGOT_PASSWORD_SEND_START });\r\n\r\n    await axios.post(`/api/v1/auth/forgotPassword`, email).then((resp) => {\r\n      const confirmMessage = resp.data.message;\r\n      dispatch({\r\n        type: userConstants.FORGOT_PASSWORD_SEND_SUCCESS,\r\n        payload: confirmMessage,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: userConstants.FORGOT_PASSWORD_SEND_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetPassword = (resetPasswordData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: userConstants.RESET_PASSWORD_START });\r\n\r\n    await axios\r\n      .post(`/api/v1/auth/resetPassword`, resetPasswordData)\r\n      .then((resp) => {\r\n        const confirmMessage = resp.data.message;\r\n        dispatch({\r\n          type: userConstants.RESET_PASSWORD_SUCCESS,\r\n          payload: confirmMessage,\r\n        });\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: userConstants.RESET_PASSWORD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { addToCart, removeItemFromCart } from \"../actions/cartAction\";\r\nimport {\r\n  Select,\r\n  Button,\r\n  FormControl,\r\n  makeStyles,\r\n  MenuItem,\r\n} from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Cart = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeItemFromCart(id));\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    history.push(\"/login?redirect=shipping\");\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <>\r\n            Your cart is empty <Link to=\"/\">Go Back</Link>\r\n          </>\r\n        ) : (\r\n          <ListGroup variant=\"flush\">\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.productId}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image\r\n                      src={item.productImage}\r\n                      alt={item.name}\r\n                      fluid\r\n                      rounded\r\n                    />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.productId}`}>\r\n                      {item.productName}\r\n                    </Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <FormControl className={classes.formControl}>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        label=\"Qty\"\r\n                        value={item.qty}\r\n                        onChange={(e) =>\r\n                          dispatch(\r\n                            addToCart(item.productId, Number(e.target.value))\r\n                          )\r\n                        }\r\n                      >\r\n                        {[...Array(item.countInStock).keys()].map((x) => (\r\n                          <MenuItem key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type=\"button\"\r\n                      variant=\"light\"\r\n                      onClick={() => removeFromCartHandler(item.productId)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleCheckout}\r\n                fullWidth\r\n                disabled={cartItems.length === 0}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoutes = ({ component: Component, ...rest }) => {\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userAuthData;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !userInfo ? <Redirect to=\"/login\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoutes;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo } = userAuthData;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !userInfo ? (\r\n          <Redirect to=\"/login\" />\r\n        ) : userInfo.role !== \"admin\" ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3 }) => {\r\n  return (\r\n    <Nav className=\"justify-content-center mb-4\">\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to=\"/shipping\">\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to=\"/payment\">\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to=\"/placeorder\">\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutStep/CheckoutSteps\";\r\nimport { saveShippingAddress } from \"../actions/cartAction\";\r\nimport { TextField, Button } from \"@material-ui/core/\";\r\n\r\nconst Shipping = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress, cartItems } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  if (cartItems.length === 0) {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push(\"/payment\");\r\n  };\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"address\"\r\n          label=\"Enter Address\"\r\n          name=\"address\"\r\n          autoComplete=\"address\"\r\n          autoFocus\r\n          value={address}\r\n          onChange={(e) => setAddress(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"city\"\r\n          label=\"Enter City\"\r\n          name=\"city\"\r\n          autoComplete=\"city\"\r\n          autoFocus\r\n          value={city}\r\n          onChange={(e) => setCity(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"postal code\"\r\n          label=\"Enter postal code\"\r\n          name=\"postal code\"\r\n          autoComplete=\"postal code\"\r\n          autoFocus\r\n          value={postalCode}\r\n          onChange={(e) => setPostalCode(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"country\"\r\n          label=\"Enter country\"\r\n          name=\"country\"\r\n          autoComplete=\"country\"\r\n          autoFocus\r\n          value={country}\r\n          onChange={(e) => setCountry(e.target.value)}\r\n        />\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default Shipping;\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer/FormContainer\";\r\nimport CheckoutSteps from \"../components/CheckoutStep/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../actions/cartAction\";\r\nimport {\r\n  Button,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n} from \"@material-ui/core/\";\r\n\r\nconst PaymentMethod = ({ history }) => {\r\n  if (!localStorage.getItem(\"shippingAddress\")) {\r\n    history.push(\"/shipping\");\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push(\"/placeorder\");\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Select Method</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"paymemtMethod\"\r\n            name=\"paymemtMethod\"\r\n            value={paymentMethod}\r\n            onChange={(e) => setPaymentMethod(e.target.value)}\r\n          >\r\n            <FormControlLabel\r\n              value=\"PayPal\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"PayPal or Credit Card\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentMethod;\r\n","import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nconst TableLoader = () => {\r\n  return (\r\n    <Table striped bordered hover responsive className=\"table-sm\">\r\n      <thead>\r\n        <tr>\r\n          {Array(7)\r\n            .fill()\r\n            .map((data, index) => (\r\n              <th key={index}>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton height={25} />\r\n                </SkeletonTheme>\r\n              </th>\r\n            ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {Array(7)\r\n          .fill()\r\n          .map((data, index) => (\r\n            <tr key={index}>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n              <td>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\nexport default TableLoader;\r\n","import React from \"react\";\r\nimport {\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  makeStyles,\r\n  MenuItem,\r\n} from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Print = ({ printAs }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel id=\"demo-simple-select-outlined-label\">Print</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-outlined-label\"\r\n        id=\"demo-simple-select-outlined\"\r\n        onChange={(e) => printAs(e)}\r\n        label=\"Print\"\r\n        autoWidth\r\n      >\r\n        <MenuItem value=\"pdf\">Print as pdf</MenuItem>\r\n        <MenuItem value=\"excel\">Print as excel</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Print;\r\n","import React, { useEffect } from \"react\";\r\nimport { Table, Button, Row, Col, ListGroup, Card } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\n//import { Button as MeterialButton } from \"@material-ui/core/\";\r\nimport { authOrder } from \"../actions/orderAction\";\r\nimport TableLoader from \"../components/Loader/TableLoader\";\r\nimport Print from \"../components/Print/Print\";\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const authOrders = useSelector((state) => state.authOrders);\r\n  const { orders, loading, error, count } = authOrders;\r\n\r\n  useEffect(() => {\r\n    dispatch(authOrder());\r\n    // eslint-disable-next-line\r\n  }, [dispatch, userInfo]);\r\n\r\n  const printAs = (e) => {\r\n    const downloadAs = e.target.value;\r\n\r\n    switch (downloadAs) {\r\n      case \"pdf\":\r\n        var docDefinition = {\r\n          content: [\r\n            //Header\r\n            {\r\n              table: {\r\n                widths: [\"auto\", \"*\"],\r\n\r\n                body: [\r\n                  [\r\n                    {\r\n                      text: \"SHOPPOINT\",\r\n                      style: \"mainheader\",\r\n                      bold: true,\r\n                      marginTop: 10,\r\n                    },\r\n\r\n                    {\r\n                      width: \"*\",\r\n                      style: \"usersOrders\",\r\n                      marginBottom: 30,\r\n                      stack: [\r\n                        {\r\n                          style: \"h2\",\r\n                          text: `Name: ${userInfo.name}`,\r\n                        },\r\n                        {\r\n                          style: \"h2\",\r\n                          text: `Email: ${userInfo.email}`,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                ],\r\n              },\r\n              layout: {\r\n                hLineWidth: function (line) {\r\n                  return line === 1;\r\n                },\r\n                vLineWidth: function () {\r\n                  return 0;\r\n                },\r\n                paddingBottom: function () {\r\n                  return 5;\r\n                },\r\n              },\r\n            },\r\n\r\n            //Vitals Details\r\n            {\r\n              style: \"header\",\r\n              table: {\r\n                widths: \"*\",\r\n                body: [\r\n                  [\r\n                    {\r\n                      border: [\"#5bc0de\", false, false, false],\r\n                      text: \"Order Details\",\r\n                    },\r\n                  ],\r\n                ],\r\n              },\r\n            },\r\n\r\n            orders.length > 0\r\n              ? {\r\n                  layout: {\r\n                    hLineWidth: function () {\r\n                      return 0;\r\n                    },\r\n                    vLineWidth: function () {\r\n                      return 0;\r\n                    },\r\n                    paddingBottom: function () {\r\n                      return 5;\r\n                    },\r\n                  },\r\n                  table: {\r\n                    headerRows: 1,\r\n                    body: [\r\n                      [\r\n                        {\r\n                          text: \"S.No\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"ID\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"DATE\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"TOTAL PRICE\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"PAID\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"DELIVERED\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                      ],\r\n\r\n                      ...orders.map((o, i) => [\r\n                        i + 1,\r\n                        o._id,\r\n                        o.createdAt.substring(0, 10),\r\n                        o.totalPrice,\r\n                        o.isPaid ? o.paidAt.substring(0, 10) : \"Not paid\",\r\n                        o.isDelivered\r\n                          ? o.deliveredAt.substring(0, 10)\r\n                          : \"Not paid\",\r\n                      ]),\r\n                    ],\r\n                  },\r\n\r\n                  fontSize: 10,\r\n                  alignment: \"center\",\r\n                }\r\n              : null,\r\n          ],\r\n          styles: {\r\n            header: {\r\n              fontSize: 12,\r\n              marginBottom: 20,\r\n              marginTop: 20,\r\n              bold: true,\r\n            },\r\n            mainheader: {\r\n              fontSize: 15,\r\n            },\r\n\r\n            usersOrders: {\r\n              marginLeft: 315,\r\n            },\r\n\r\n            h2: {\r\n              marginTop: 5,\r\n              fontSize: 7,\r\n            },\r\n          },\r\n        };\r\n        pdfMake.createPdf(docDefinition).download(\"orders.pdf\");\r\n\r\n        break;\r\n      case \"excel\":\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>Profile</h2>\r\n        <Card>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Name:</Col>\r\n                <Col>\r\n                  <strong>{userInfo.name}</strong>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Email:</Col>\r\n                <Col>\r\n                  <strong>{userInfo.email}</strong>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Row>\r\n                <Col>Account:</Col>\r\n                <Col>\r\n                  <strong>\r\n                    {userInfo.verify ? \"Verified\" : \"Not Verified\"}\r\n                  </strong>\r\n                </Col>\r\n              </Row>\r\n            </ListGroup.Item>\r\n            {/* <ListGroup.Item>\r\n              <LinkContainer to=\"/updateUserDetails\">\r\n                <MeterialButton\r\n                  type=\"button\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  disabled={true}\r\n                >\r\n                  Update\r\n                </MeterialButton>\r\n              </LinkContainer>\r\n            </ListGroup.Item> */}\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n      <Col md={9}>\r\n        <div className=\"clearfix\">\r\n          <span className=\"float-left\">\r\n            <h1>My Orders ({count})</h1>\r\n          </span>\r\n\r\n          <span className=\"float-right\">\r\n            {\" \"}\r\n            <Print printAs={printAs} />\r\n          </span>\r\n        </div>\r\n\r\n        {loading ? (\r\n          <TableLoader />\r\n        ) : error ? (\r\n          <ErrorMessage header=\"Something went wrong\" message={error} />\r\n        ) : (\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL PRICE</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className=\"btn-sm\" variant=\"light\">\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import axios from \"axios\";\r\nimport * as orderConstants from \"../constants/orderConstants\";\r\nimport * as cartConstants from \"../constants/cartConstants\";\r\n\r\nexport const createOrder = (orderData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: orderConstants.CREATE_ORDER_START });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(\"/api/v1/order/\", orderData, config).then((resp) => {\r\n      const data = resp.data.data;\r\n\r\n      dispatch({\r\n        type: orderConstants.CREATE_ORDER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    });\r\n\r\n    localStorage.removeItem(\"cartItems\");\r\n    localStorage.removeItem(\"shippingAddress\");\r\n    localStorage.removeItem(\"paymentMethod\");\r\n    dispatch({\r\n      type: cartConstants.CART_RESET,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: orderConstants.CREATE_ORDER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrder = (orderId, initialLoading) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    if (initialLoading) {\r\n      dispatch({ type: orderConstants.GET_ORDER_START });\r\n    }\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.get(`/api/v1/order/${orderId}`, config).then((resp) => {\r\n      const data = resp.data.data;\r\n\r\n      dispatch({\r\n        type: orderConstants.GET_ORDER_SUCCESS,\r\n        payload: data,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: orderConstants.GET_ORDER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.error\r\n          ? error.response.data.error\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: orderConstants.ORDER_PAY_START,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios\r\n      .post(`/api/v1/order/${orderId}/pay`, paymentResult, config)\r\n      .then((resp) => {\r\n        const data = resp.data.data;\r\n\r\n        dispatch({\r\n          type: orderConstants.ORDER_PAY_SUCCESS,\r\n          payload: data,\r\n        });\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: orderConstants.ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: orderConstants.ORDER_DILIVERD_START,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios\r\n      .post(`/api/v1/order/${orderId}/deliver`, {}, config)\r\n      .then((resp) => {\r\n        const data = resp.data.data;\r\n\r\n        dispatch({\r\n          type: orderConstants.ORDER_DILIVERD_SUCCESS,\r\n          payload: data,\r\n        });\r\n      });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: orderConstants.ORDER_DILIVERD_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const authOrder = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: orderConstants.AUTH_ORDER_FETCH_START,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.get(`/api/v1/order/authOrders`, config).then((resp) => {\r\n      const data = resp.data.data;\r\n      const count = resp.data.count;\r\n\r\n      dispatch({\r\n        type: orderConstants.AUTH_ORDER_FETCH_SUCCESS,\r\n        payload: data,\r\n        total: count,\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: orderConstants.AUTH_ORDER_FETCH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: orderConstants.ORDERLIST_FETCH_START,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.get(`/api/v1/order/`, config).then((resp) => {\r\n      const data = resp.data.results;\r\n      const totalOrders = resp.data.count;\r\n\r\n      dispatch({\r\n        type: orderConstants.ORDERLIST_FETCH_SUCCESS,\r\n        payload: {\r\n          data,\r\n          totalOrders,\r\n        },\r\n      });\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: orderConstants.ORDERLIST_FETCH_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport CheckoutSteps from \"../components/CheckoutStep/CheckoutSteps\";\r\nimport { createOrder } from \"../actions/orderAction\";\r\nimport * as orderConstants from \"../constants/orderConstants\";\r\nimport { Button, CircularProgress, makeStyles } from \"@material-ui/core/\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst PlaceOrder = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  const orderCreate = useSelector((state) => state.createOrder);\r\n  const { order, success, error, loading } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/order/${order._id}`);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shipping: cart.shippingAddress,\r\n        payment: {\r\n          paymentMethod: cart.paymentMethod,\r\n        },\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorMessage\r\n          header=\"Create Order Error\"\r\n          message={error}\r\n          reset={orderConstants.CREATE_ORDER_RESET}\r\n        />\r\n      )}\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{\" \"}\r\n                {cart.shippingAddress.postalCode},{\" \"}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <>Your cart is empty</>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.productImage}\r\n                            alt={item.productName}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.productId}`}>\r\n                            {item.productName}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  fullWidth\r\n                  disabled={cart.cartItems === 0 || loading}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  {loading ? (\r\n                    <CircularProgress\r\n                      color=\"inherit\"\r\n                      className={classes.prgressColor}\r\n                    />\r\n                  ) : (\r\n                    <>Place Order</>\r\n                  )}\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrder;\r\n","import React, { useEffect } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport { listOrders } from \"../actions/orderAction\";\r\nimport TableLoader from \"../components/Loader/TableLoader\";\r\nimport Print from \"../components/Print/Print\";\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst OrderList = () => {\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n\r\n  const { orders, loading, error, count } = orderList;\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listOrders());\r\n    // eslint-disable-next-line\r\n  }, [dispatch]);\r\n\r\n  const printAs = (e) => {\r\n    const downloadAs = e.target.value;\r\n\r\n    switch (downloadAs) {\r\n      case \"pdf\":\r\n        var docDefinition = {\r\n          content: [\r\n            //Header\r\n            {\r\n              table: {\r\n                widths: [\"auto\", \"*\"],\r\n\r\n                body: [\r\n                  [\r\n                    {\r\n                      text: \"SHOPPOINT\",\r\n                      style: \"mainheader\",\r\n                      bold: true,\r\n                      marginTop: 10,\r\n                    },\r\n\r\n                    {\r\n                      width: \"*\",\r\n                      style: \"usersOrders\",\r\n                      marginBottom: 30,\r\n                      stack: [\r\n                        {\r\n                          style: \"h2\",\r\n                          text: `Name: ${userInfo.name}`,\r\n                        },\r\n                        {\r\n                          style: \"h2\",\r\n                          text: `Email: ${userInfo.email}`,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                ],\r\n              },\r\n              layout: {\r\n                hLineWidth: function (line) {\r\n                  return line === 1;\r\n                },\r\n                vLineWidth: function () {\r\n                  return 0;\r\n                },\r\n                paddingBottom: function () {\r\n                  return 5;\r\n                },\r\n              },\r\n            },\r\n\r\n            //Vitals Details\r\n            {\r\n              style: \"header\",\r\n              table: {\r\n                widths: \"*\",\r\n                body: [\r\n                  [\r\n                    {\r\n                      border: [\"#5bc0de\", false, false, false],\r\n                      text: \"Orders List\",\r\n                    },\r\n                  ],\r\n                ],\r\n              },\r\n            },\r\n\r\n            orders.length > 0\r\n              ? {\r\n                  layout: {\r\n                    hLineWidth: function () {\r\n                      return 0;\r\n                    },\r\n                    vLineWidth: function () {\r\n                      return 0;\r\n                    },\r\n                    paddingBottom: function () {\r\n                      return 5;\r\n                    },\r\n                  },\r\n                  table: {\r\n                    headerRows: 1,\r\n                    body: [\r\n                      [\r\n                        {\r\n                          text: \"S.No\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"ID\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"USER\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"DATE\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"TOTAL PRICE\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"PAID\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"DELIVERED\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                      ],\r\n\r\n                      ...orders.map((o, i) => [\r\n                        i + 1,\r\n                        o._id,\r\n                        o.userId && o.userId.name,\r\n                        o.createdAt.substring(0, 10),\r\n                        o.totalPrice,\r\n                        o.isPaid ? o.paidAt.substring(0, 10) : \"Not paid\",\r\n                        o.isDelivered\r\n                          ? o.deliveredAt.substring(0, 10)\r\n                          : \"Not paid\",\r\n                      ]),\r\n                    ],\r\n                  },\r\n\r\n                  fontSize: 9,\r\n                  alignment: \"center\",\r\n                }\r\n              : null,\r\n          ],\r\n          styles: {\r\n            header: {\r\n              fontSize: 12,\r\n              marginBottom: 20,\r\n              marginTop: 20,\r\n              bold: true,\r\n            },\r\n            mainheader: {\r\n              fontSize: 15,\r\n            },\r\n\r\n            usersOrders: {\r\n              marginLeft: 315,\r\n            },\r\n\r\n            h2: {\r\n              marginTop: 5,\r\n              fontSize: 7,\r\n            },\r\n          },\r\n        };\r\n        pdfMake.createPdf(docDefinition).download(\"ordersList.pdf\");\r\n\r\n        break;\r\n      case \"excel\":\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"clearfix\">\r\n        <span className=\"float-left\">\r\n          <h1>Orders ({count})</h1>\r\n        </span>\r\n\r\n        <span className=\"float-right\">\r\n          {\" \"}\r\n          <Print printAs={printAs} />\r\n        </span>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <TableLoader />\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <Table striped bordered hover responsive className=\"table-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.userId && order.userId.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant=\"light\" className=\"btn-sm\">\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","import React, { useState } from \"react\";\r\nimport { Toast } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport \"animate.css\";\r\n\r\nconst SuccessMessage = ({ header, message, reset }) => {\r\n  const [show, setShow] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <div style={{ position: \"fixed\", right: \"0\", zIndex: \"20180210\" }}>\r\n        <Toast\r\n          onClose={() => {\r\n            setShow(false);\r\n            dispatch({ type: reset });\r\n          }}\r\n          show={show}\r\n          delay={3000}\r\n          autohide\r\n          className=\"animate__animated animate__shakeX\"\r\n        >\r\n          <Toast.Header\r\n            style={{\r\n              background: \"#43BE31\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            <strong className=\"mr-auto\">{header}</strong>\r\n          </Toast.Header>\r\n          <Toast.Body>{message}</Toast.Body>\r\n        </Toast>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SuccessMessage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport {\r\n  Table,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Modal,\r\n  Form,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport SuccessMessage from \"../components/Message/successMessage\";\r\nimport TableLoader from \"../components/Loader/TableLoader\";\r\nimport {\r\n  Button as MaterialButton,\r\n  TextField,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n} from \"@material-ui/core/\";\r\nimport {\r\n  listProductsForAdmin,\r\n  deleteProduct,\r\n  createProduct,\r\n} from \"../actions/productAction\";\r\nimport * as productConstants from \"../constants/productConstants\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 330,\r\n    top: 6,\r\n    left: -4,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  prgressColor: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst ProductList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, products, count, error, success } = productList;\r\n\r\n  const deleteProductData = useSelector((state) => state.deleteProduct);\r\n  const { success: deleteSuccess, error: deleteFail } = deleteProductData;\r\n\r\n  const createProductDetails = useSelector(\r\n    (state) => state.createProductDetails\r\n  );\r\n  const {\r\n    success: createSuccess,\r\n    error: createFail,\r\n    loading: createLoading,\r\n  } = createProductDetails;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [productImage, setProductImage] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [openForm, setOpenForm] = useState(false);\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (createSuccess) {\r\n      setOpenForm(false);\r\n      setName(\"\");\r\n      setProductImage(\"\");\r\n      setBrand(\"\");\r\n      setPrice(\"\");\r\n      setCategory(\"\");\r\n      setCountInStock(\"\");\r\n      setDescription(\"\");\r\n\r\n      dispatch({ type: productConstants.CREATE_PRODUCT_RESET });\r\n    }\r\n    dispatch(listProductsForAdmin(initialLoading));\r\n    // eslint-disable-next-line\r\n  }, [dispatch, deleteSuccess, createSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const cancelCreateProduct = () => {\r\n    setOpenForm(false);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      name === \"\" ||\r\n      category === \"\" ||\r\n      productImage === \"\" ||\r\n      description === \"\" ||\r\n      brand === \"\" ||\r\n      price === \"\" ||\r\n      countInStock === \"\"\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"name\", name);\r\n    formData.append(\"productImage\", productImage);\r\n    formData.append(\"brand\", brand);\r\n    formData.append(\"price\", price);\r\n    formData.append(\"category\", category);\r\n    formData.append(\"countInStock\", countInStock);\r\n    formData.append(\"description\", description);\r\n    dispatch(createProduct(formData));\r\n  };\r\n\r\n  const openNewProductForm = () => {\r\n    if (openForm) {\r\n      return (\r\n        <>\r\n          <Modal\r\n            show={openForm}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add Product\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            {createFail && (\r\n              <ErrorMessage\r\n                header=\"Something went wrong\"\r\n                message={createFail}\r\n                reset={productConstants.CREATE_PRODUCT_RESET}\r\n              />\r\n            )}\r\n            <Form onSubmit={submitHandler}>\r\n              <Modal.Body className=\"show-grid\">\r\n                <Container>\r\n                  <Row>\r\n                    <Col xs={12} md={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        name=\"name\"\r\n                        autoComplete=\"name\"\r\n                        autoFocus\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"brand\"\r\n                        label=\"Brand\"\r\n                        name=\"brand\"\r\n                        autoComplete=\"brand\"\r\n                        autoFocus\r\n                        value={brand}\r\n                        onChange={(e) => setBrand(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col xs={12} md={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"number\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"price\"\r\n                        label=\"Price\"\r\n                        name=\"price\"\r\n                        autoComplete=\"price\"\r\n                        autoFocus\r\n                        value={price}\r\n                        onChange={(e) => setPrice(Number(e.target.value))}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"number\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"countInStock\"\r\n                        label=\"CountInStock\"\r\n                        name=\"countInStock\"\r\n                        autoComplete=\"countInStock\"\r\n                        autoFocus\r\n                        value={countInStock}\r\n                        onChange={(e) =>\r\n                          setCountInStock(Number(e.target.value))\r\n                        }\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  <Row>\r\n                    <Col xs={12} md={6}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"file\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"file\"\r\n                        name=\"file\"\r\n                        autoComplete=\"file\"\r\n                        autoFocus\r\n                        onChange={(e) => setProductImage(e.target.files[0])}\r\n                      />\r\n                    </Col>\r\n                    <Col xs={12} md={6}>\r\n                      <FormControl\r\n                        variant=\"outlined\"\r\n                        className={classes.formControl}\r\n                      >\r\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                          Category\r\n                        </InputLabel>\r\n                        <Select\r\n                          labelId=\"demo-simple-select-outlined-label\"\r\n                          id=\"demo-simple-select-outlined\"\r\n                          onChange={(e) => setCategory(e.target.value)}\r\n                          label=\"Category\"\r\n                          value={category}\r\n                        >\r\n                          <MenuItem value=\"\">\r\n                            <em>None</em>\r\n                          </MenuItem>\r\n                          <MenuItem value=\"Shirt\">T-shirt</MenuItem>\r\n                          <MenuItem value=\"Pants\">Pant</MenuItem>\r\n                          <MenuItem value=\"Vest\">Vest</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col xs={12} md={12}>\r\n                      <TextField\r\n                        variant=\"outlined\"\r\n                        type=\"text\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"description\"\r\n                        label=\"Description\"\r\n                        name=\"description\"\r\n                        autoComplete=\"description\"\r\n                        autoFocus\r\n                        value={description}\r\n                        multiline\r\n                        rows={5}\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <MaterialButton\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className=\"mr-2\"\r\n                  disabled={createLoading}\r\n                >\r\n                  {createLoading ? (\r\n                    <CircularProgress\r\n                      color=\"inherit\"\r\n                      className={classes.prgressColor}\r\n                    />\r\n                  ) : (\r\n                    <>Submit</>\r\n                  )}\r\n                </MaterialButton>{\" \"}\r\n                <MaterialButton\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={cancelCreateProduct}\r\n                >\r\n                  Close\r\n                </MaterialButton>\r\n              </Modal.Footer>\r\n            </Form>\r\n          </Modal>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  const deleteHandler = (id, e) => {\r\n    e.preventDefault();\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"custom-ui\">\r\n            <h1 className=\"font-weight-bold text-white\">Are you sure?</h1>\r\n            <p>You want to delete this product?</p>\r\n            <MaterialButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                dispatch(deleteProduct(id));\r\n                onClose();\r\n              }}\r\n            >\r\n              Yes, Delete it !\r\n            </MaterialButton>\r\n            <MaterialButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={onClose}\r\n            >\r\n              No\r\n            </MaterialButton>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {deleteSuccess && (\r\n        <SuccessMessage\r\n          header=\"Done\"\r\n          message=\"Product Deleted Successfully\"\r\n          reset={productConstants.DELETE_PRODUCT_RESET}\r\n        />\r\n      )}\r\n      {deleteFail && (\r\n        <ErrorMessage\r\n          header=\"Something went wrong\"\r\n          message={deleteFail}\r\n          reset={productConstants.DELETE_PRODUCT_RESET}\r\n        />\r\n      )}\r\n      <Row>\r\n        <Col>\r\n          <h1>Products({count})</h1>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <MaterialButton\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => setOpenForm(true)}\r\n          >\r\n            <i className=\"fas fa-plus\"></i> Create Product\r\n          </MaterialButton>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <TableLoader />\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={(e) => deleteHandler(product._id, e)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n      {openNewProductForm()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport SuccessMessage from \"../components/Message/successMessage\";\r\nimport { userList, userDelete } from \"../actions/userAction\";\r\nimport * as userConstants from \"../constants/userConstants\";\r\nimport { Button as MaterialButton } from \"@material-ui/core/\";\r\nimport TableLoader from \"../components/Loader/TableLoader\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport Print from \"../components/Print/Print\";\r\nimport pdfMake from \"pdfmake/build/pdfmake\";\r\nimport pdfFonts from \"pdfmake/build/vfs_fonts\";\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\nconst UserList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n  const userListDetails = useSelector((state) => state.userList);\r\n  const { loading, users, count, error, success } = userListDetails;\r\n\r\n  const userDeleteDetails = useSelector((state) => state.userDeleteDetails);\r\n  const { success: deleteSuccess, error: deleteFail } = userDeleteDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch(userList(initialLoading));\r\n    // eslint-disable-next-line\r\n  }, [dispatch, deleteSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const deleteHandler = (id, e) => {\r\n    e.preventDefault();\r\n    confirmAlert({\r\n      customUI: ({ onClose }) => {\r\n        return (\r\n          <div className=\"custom-ui\">\r\n            <h1 className=\"font-weight-bold text-white\">Are you sure?</h1>\r\n            <p>You want to delete this user?</p>\r\n            <MaterialButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                dispatch(userDelete(id));\r\n                onClose();\r\n              }}\r\n            >\r\n              Yes, Delete it !\r\n            </MaterialButton>\r\n            <MaterialButton\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={onClose}\r\n            >\r\n              No\r\n            </MaterialButton>\r\n          </div>\r\n        );\r\n      },\r\n    });\r\n  };\r\n\r\n  const printAs = (e) => {\r\n    const downloadAs = e.target.value;\r\n\r\n    switch (downloadAs) {\r\n      case \"pdf\":\r\n        var docDefinition = {\r\n          content: [\r\n            //Header\r\n            {\r\n              table: {\r\n                widths: [\"auto\", \"*\"],\r\n\r\n                body: [\r\n                  [\r\n                    {\r\n                      text: \"SHOPPOINT\",\r\n                      style: \"mainheader\",\r\n                      bold: true,\r\n                      marginTop: 10,\r\n                    },\r\n\r\n                    {\r\n                      width: \"*\",\r\n                      style: \"usersOrders\",\r\n                      marginBottom: 30,\r\n                      stack: [\r\n                        {\r\n                          style: \"h2\",\r\n                          text: `Name: ${userInfo.name}`,\r\n                        },\r\n                        {\r\n                          style: \"h2\",\r\n                          text: `Email: ${userInfo.email}`,\r\n                        },\r\n                      ],\r\n                    },\r\n                  ],\r\n                ],\r\n              },\r\n              layout: {\r\n                hLineWidth: function (line) {\r\n                  return line === 1;\r\n                },\r\n                vLineWidth: function () {\r\n                  return 0;\r\n                },\r\n                paddingBottom: function () {\r\n                  return 5;\r\n                },\r\n              },\r\n            },\r\n\r\n            //Vitals Details\r\n            {\r\n              style: \"header\",\r\n              table: {\r\n                widths: \"*\",\r\n                body: [\r\n                  [\r\n                    {\r\n                      border: [\"#5bc0de\", false, false, false],\r\n                      text: \"Users List\",\r\n                    },\r\n                  ],\r\n                ],\r\n              },\r\n            },\r\n\r\n            users.length > 0\r\n              ? {\r\n                  layout: {\r\n                    hLineWidth: function () {\r\n                      return 0;\r\n                    },\r\n                    vLineWidth: function () {\r\n                      return 0;\r\n                    },\r\n                    paddingBottom: function () {\r\n                      return 5;\r\n                    },\r\n                  },\r\n                  table: {\r\n                    headerRows: 1,\r\n                    body: [\r\n                      [\r\n                        {\r\n                          text: \"S.No\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"ID\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"NAME\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"EMAIL\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"VERIFIED\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"ROLE\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                        {\r\n                          text: \"DATE\",\r\n                          bold: true,\r\n                          fillColor: \"#2B2B52\",\r\n                          color: \"white\",\r\n                        },\r\n                      ],\r\n\r\n                      ...users.map((u, i) => [\r\n                        i + 1,\r\n                        u._id,\r\n                        u.name,\r\n                        u.email,\r\n                        u.verify ? \"Verified\" : \"Not paid\",\r\n                        u.role,\r\n                        u.createdAt.substring(0, 10),\r\n                      ]),\r\n                    ],\r\n                  },\r\n\r\n                  fontSize: 8,\r\n                  alignment: \"center\",\r\n                }\r\n              : null,\r\n          ],\r\n          styles: {\r\n            header: {\r\n              fontSize: 12,\r\n              marginBottom: 20,\r\n              marginTop: 20,\r\n              bold: true,\r\n            },\r\n            mainheader: {\r\n              fontSize: 15,\r\n            },\r\n\r\n            usersOrders: {\r\n              marginLeft: 315,\r\n            },\r\n\r\n            h2: {\r\n              marginTop: 5,\r\n              fontSize: 7,\r\n            },\r\n          },\r\n        };\r\n        pdfMake.createPdf(docDefinition).download(\"usersList.pdf\");\r\n\r\n        break;\r\n      case \"excel\":\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {deleteSuccess && (\r\n        <SuccessMessage\r\n          header=\"Done\"\r\n          message=\"User Deleted Successfully\"\r\n          reset={userConstants.USER_DELETE_RESET}\r\n        />\r\n      )}\r\n      {deleteFail && (\r\n        <ErrorMessage\r\n          header=\"Something went wrong\"\r\n          message={deleteFail}\r\n          reset={userConstants.USER_DELETE_RESET}\r\n        />\r\n      )}\r\n      <div className=\"clearfix\">\r\n        <span className=\"float-left\">\r\n          <h1>Users ({count})</h1>\r\n        </span>\r\n\r\n        <span className=\"float-right\">\r\n          {\" \"}\r\n          <Print printAs={printAs} />\r\n        </span>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <TableLoader />\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>EMAIL</th>\r\n                <th>VERIFIED</th>\r\n                <th>ROLE</th>\r\n                <th>DATE</th>\r\n                <th>ACTION</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <tr key={user._id}>\r\n                  <td>{user._id}</td>\r\n                  <td>{user.name}</td>\r\n                  <td>\r\n                    <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                  </td>\r\n                  <td>\r\n                    {user.verify ? (\r\n                      <i\r\n                        className=\"fas fa-check\"\r\n                        style={{ color: \"#43BE31\" }}\r\n                      ></i>\r\n                    ) : (\r\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>{user.role}</td>\r\n                  <td>{user.createdAt.substring(0, 10)}</td>\r\n\r\n                  <td>\r\n                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                      <Button variant=\"light\" className=\"btn-sm\">\r\n                        <i className=\"fas fa-edit\"></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      className=\"btn-sm\"\r\n                      onClick={(e) => deleteHandler(user._id, e)}\r\n                    >\r\n                      <i className=\"fas fa-trash\"></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer/FormContainer\";\r\nimport * as userAction from \"../actions/userAction\";\r\nimport * as userConstants from \"../constants/userConstants\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n} from \"@material-ui/core/\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport confirmationImg from \"../assests/confirmation.png\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  prgressColor: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst UpdateUser = ({ match }) => {\r\n  const userId = match.params.userId;\r\n  const userUpdateDetails = useSelector((state) => state.userUpdateDetails);\r\n  const {\r\n    loading: updateLoading,\r\n    error: updateError,\r\n    success: updateSuccess,\r\n  } = userUpdateDetails;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, user, error, success } = userDetails;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [Success, setSuccess] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(userAction.getUser(userId));\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, userId]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setName(user.name);\r\n      setEmail(user.email);\r\n      setRole(user.role);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const UpdateData = {\r\n      name,\r\n      email,\r\n      role,\r\n    };\r\n    dispatch(userAction.userUpdate(userId, UpdateData));\r\n  };\r\n\r\n  const ConfirmedAlert = () => {\r\n    if (updateSuccess) {\r\n      return confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n          return (\r\n            <div className=\"custom-ui-alert\">\r\n              <div className=\"success-img\">\r\n                <img src={confirmationImg} alt=\"confirmationImg\" />\r\n              </div>\r\n              <h3 className=\"font-weight-bold text\">\r\n                User updated successfully\r\n              </h3>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  onClose();\r\n                  dispatch({ type: userConstants.USER_EDIT_RESET });\r\n                  setSuccess(true);\r\n                }}\r\n              >\r\n                OK\r\n              </Button>\r\n            </div>\r\n          );\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {Success && <Redirect to=\"/admin/userList\" />}\r\n      {updateError && (\r\n        <ErrorMessage\r\n          header=\"Something went wrong\"\r\n          message={updateError}\r\n          reset={userConstants.USER_EDIT_RESET}\r\n        />\r\n      )}\r\n      <Link to=\"/admin/userList\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <h4>Loading...</h4>\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          <FormContainer>\r\n            <h1>Edit User</h1>\r\n            <Form onSubmit={submitHandler}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                autoFocus\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"email\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"brand\"\r\n                autoFocus\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Role\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  onChange={(e) => setRole(e.target.value)}\r\n                  label=\"Role\"\r\n                  value={role}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"user\">User</MenuItem>\r\n                  <MenuItem value=\"admin\">Admin</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                disabled={updateLoading}\r\n                className={classes.prgressColor}\r\n              >\r\n                {updateLoading ? (\r\n                  <CircularProgress color=\"inherit\" />\r\n                ) : (\r\n                  <>Update</>\r\n                )}\r\n              </Button>\r\n            </Form>\r\n          </FormContainer>\r\n          {ConfirmedAlert()}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UpdateUser;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormContainer from \"../components/FormContainer/FormContainer\";\r\nimport * as productAction from \"../actions/productAction\";\r\nimport * as productConstants from \"../constants/productConstants\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  makeStyles,\r\n} from \"@material-ui/core/\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport confirmationImg from \"../assests/confirmation.png\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  prgressColor: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst EditProduct = ({ match }) => {\r\n  const productId = match.params.productId;\r\n  const productData = useSelector((state) => state.Product);\r\n  const { loading, product, error, success } = productData;\r\n\r\n  const updateProductDetails = useSelector(\r\n    (state) => state.updateProductDetails\r\n  );\r\n  const {\r\n    loading: EditProductLoading,\r\n    error: EditProductError,\r\n    success: EditProductSuccess,\r\n  } = updateProductDetails;\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [brand, setBrand] = useState(\"\");\r\n  const [price, setPrice] = useState(0);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [Success, setSuccess] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(productAction.product(productId));\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, productId]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setName(product.name);\r\n      setPrice(product.price);\r\n      setBrand(product.brand);\r\n      setCategory(product.category);\r\n      setCountInStock(product.countInStock);\r\n      setDescription(product.description);\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const UpdateData = {\r\n      name,\r\n      brand,\r\n      price,\r\n      category,\r\n      countInStock,\r\n      description,\r\n    };\r\n    dispatch(productAction.EditProduct(productId, UpdateData));\r\n  };\r\n\r\n  const ConfirmedAlert = () => {\r\n    if (EditProductSuccess) {\r\n      return confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n          return (\r\n            <div className=\"custom-ui-alert\">\r\n              <div className=\"success-img\">\r\n                <img src={confirmationImg} alt=\"confirmationImg\" />\r\n              </div>\r\n              <h3 className=\"font-weight-bold text\">\r\n                Product updated successfully\r\n              </h3>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  onClose();\r\n                  dispatch({ type: productConstants.EDIT_PRODUCT_RESET });\r\n                  setSuccess(true);\r\n                }}\r\n              >\r\n                OK\r\n              </Button>\r\n            </div>\r\n          );\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {Success && <Redirect to=\"/admin/productList\" />}\r\n      {EditProductError && (\r\n        <ErrorMessage\r\n          header=\"Something went wrong\"\r\n          message={EditProductError}\r\n          reset={productConstants.EDIT_PRODUCT_RESET}\r\n        />\r\n      )}\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light my-3\">\r\n        Go Back\r\n      </Link>\r\n      {loading ? (\r\n        <h4>Loading...</h4>\r\n      ) : error ? (\r\n        <ErrorMessage header=\"Something went wrong\" message={error} />\r\n      ) : (\r\n        <>\r\n          <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            <Form onSubmit={submitHandler}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                autoComplete=\"name\"\r\n                autoFocus\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"brand\"\r\n                label=\"Brand\"\r\n                name=\"brand\"\r\n                autoComplete=\"brand\"\r\n                autoFocus\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              />\r\n\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"price\"\r\n                label=\"Price\"\r\n                name=\"price\"\r\n                autoComplete=\"price\"\r\n                autoFocus\r\n                value={price}\r\n                onChange={(e) => setPrice(Number(e.target.value))}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"countInStock\"\r\n                label=\"CountInStock\"\r\n                name=\"countInStock\"\r\n                autoComplete=\"countInStock\"\r\n                autoFocus\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(Number(e.target.value))}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                type=\"text\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                autoComplete=\"description\"\r\n                autoFocus\r\n                value={description}\r\n                multiline\r\n                rows={5}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n              <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Category\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                  label=\"Category\"\r\n                  value={category}\r\n                >\r\n                  <MenuItem value=\"\">\r\n                    <em>None</em>\r\n                  </MenuItem>\r\n                  <MenuItem value=\"Shirt\">T-shirt</MenuItem>\r\n                  <MenuItem value=\"Pants\">Pant</MenuItem>\r\n                  <MenuItem value=\"Vest\">Vest</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                disabled={EditProductLoading}\r\n              >\r\n                {EditProductLoading ? (\r\n                  <CircularProgress\r\n                    color=\"inherit\"\r\n                    className={classes.prgressColor}\r\n                  />\r\n                ) : (\r\n                  <>Update</>\r\n                )}\r\n              </Button>\r\n            </Form>\r\n          </FormContainer>\r\n          {ConfirmedAlert()}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditProduct;\r\n","import React from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: \"info\",\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation=\"border\"\r\n      role=\"status\"\r\n      style={{\r\n        width: \"100px\",\r\n        height: \"100px\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n      }}\r\n    >\r\n      <span className=\"sr-only\">Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { Row, Col, ListGroup, Card } from \"react-bootstrap\";\r\nimport Skeleton, { SkeletonTheme } from \"react-loading-skeleton\";\r\n\r\nconst Order = () => {\r\n  return (\r\n    <>\r\n      <h1>\r\n        {\" \"}\r\n        <SkeletonTheme color=\"lightGray\">\r\n          <Skeleton />\r\n        </SkeletonTheme>\r\n      </h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </h2>\r\n              <p>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </p>\r\n              <p>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </p>\r\n              <p>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </p>\r\n              <SkeletonTheme color=\"lightGray\">\r\n                <Skeleton height={30} />\r\n              </SkeletonTheme>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </h2>\r\n              <p>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </p>\r\n              <SkeletonTheme color=\"lightGray\">\r\n                <Skeleton height={30} />\r\n              </SkeletonTheme>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>\r\n                {\" \"}\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton />\r\n                </SkeletonTheme>\r\n              </h2>\r\n\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col md={1}>\r\n                      <SkeletonTheme color=\"lightGray\">\r\n                        <Skeleton />\r\n                      </SkeletonTheme>\r\n                    </Col>\r\n                    <Col>\r\n                      <SkeletonTheme color=\"lightGray\">\r\n                        <Skeleton />\r\n                      </SkeletonTheme>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      <SkeletonTheme color=\"lightGray\">\r\n                        <Skeleton />\r\n                      </SkeletonTheme>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>\r\n                  <SkeletonTheme color=\"lightGray\">\r\n                    <Skeleton />\r\n                  </SkeletonTheme>\r\n                </h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                  <Col>\r\n                    <SkeletonTheme color=\"lightGray\">\r\n                      <Skeleton />\r\n                    </SkeletonTheme>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton height={30} />\r\n                </SkeletonTheme>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <SkeletonTheme color=\"lightGray\">\r\n                  <Skeleton height={30} />\r\n                </SkeletonTheme>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, ListGroup, Image, Card } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@material-ui/core/\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport Message from \"../components/InfoMessage/Message\";\r\nimport Loader from \"../components/Loader/Loader\";\r\nimport { getOrder, payOrder, deliverOrder } from \"../actions/orderAction\";\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from \"../constants/orderConstants\";\r\nimport OrderLoader from \"../components/Loader/OrderLoader\";\r\n\r\nconst Order = ({ match }) => {\r\n  const orderId = match.params.orderId;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const [initialLoading, setInitialLoading] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error, success } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (order && !order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, orderId, successPay, successDeliver, order]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ORDER_PAY_RESET });\r\n    dispatch({ type: ORDER_DELIVER_RESET });\r\n    dispatch(getOrder(orderId, initialLoading));\r\n    // eslint-disable-next-line\r\n  }, [dispatch, successPay, successDeliver]);\r\n\r\n  useEffect(() => {\r\n    if (success && initialLoading) {\r\n      setInitialLoading(false);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [dispatch, success]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order._id));\r\n  };\r\n\r\n  return loading ? (\r\n    <OrderLoader />\r\n  ) : error ? (\r\n    <ErrorMessage header=\"Something went wrong\" message={error} />\r\n  ) : (\r\n    <>\r\n      {order ? (\r\n        <>\r\n          <h1>Order {order._id}</h1>\r\n          <Row>\r\n            <Col md={8}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Name: </strong> {order.userId.name}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Email: </strong>{\" \"}\r\n                    <a href={`mailto:${order.userId.email}`}>\r\n                      {order.userId.email}\r\n                    </a>\r\n                  </p>\r\n                  <p>\r\n                    <strong>Address:</strong> {order.shipping.address},\r\n                    {order.shipping.city} {order.shipping.postalCode},{\" \"}\r\n                    {order.shipping.country}\r\n                  </p>\r\n                  {order.isDelivered ? (\r\n                    <Message variant=\"success\">\r\n                      Delivered on {order.deliveredAt}\r\n                    </Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Delivered</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>Method: </strong>\r\n                    {order.payment ? order.payment.paymentMethod : \"\"}\r\n                  </p>\r\n                  {order.isPaid ? (\r\n                    <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n                  ) : (\r\n                    <Message variant=\"danger\">Not Paid</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                {order.orderItems ? (\r\n                  <ListGroup.Item>\r\n                    <h2>Order Items</h2>\r\n                    {order.orderItems.length === 0 ? (\r\n                      <Message>Order is empty</Message>\r\n                    ) : (\r\n                      <ListGroup variant=\"flush\">\r\n                        {order.orderItems.map((item, index) => (\r\n                          <ListGroup.Item key={index}>\r\n                            <Row>\r\n                              <Col md={1}>\r\n                                <Image\r\n                                  src={item.productImage}\r\n                                  alt={item.productName}\r\n                                  fluid\r\n                                  rounded\r\n                                />\r\n                              </Col>\r\n                              <Col>\r\n                                <Link to={`/product/${item.productId}`}>\r\n                                  {item.productName}\r\n                                </Link>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                {item.qty} x ${item.price} = $\r\n                                {item.qty * item.price}\r\n                              </Col>\r\n                            </Row>\r\n                          </ListGroup.Item>\r\n                        ))}\r\n                      </ListGroup>\r\n                    )}\r\n                  </ListGroup.Item>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>${order.itemsPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>${order.shippingPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Tax</Col>\r\n                      <Col>${order.taxPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>${order.totalPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {!order.isPaid && (\r\n                    <ListGroup.Item>\r\n                      {loadingPay && <Loader />}\r\n                      {!sdkReady ? (\r\n                        <Loader />\r\n                      ) : (\r\n                        <PayPalButton\r\n                          amount={order.totalPrice}\r\n                          onSuccess={successPaymentHandler}\r\n                        />\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  )}\r\n                  {loadingDeliver && <Loader />}\r\n                  {userInfo &&\r\n                    userInfo.role === \"admin\" &&\r\n                    order.isPaid &&\r\n                    !order.isDelivered && (\r\n                      <ListGroup.Item>\r\n                        <Button\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          fullWidth\r\n                          onClick={deliverHandler}\r\n                        >\r\n                          Mark As Delivered\r\n                        </Button>\r\n                      </ListGroup.Item>\r\n                    )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as userAction from \"../actions/userAction\";\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(userAction.Logout());\r\n  }, [dispatch]);\r\n\r\n  return <Redirect to=\"/\" />;\r\n};\r\n\r\nexport default Logout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport SuccessMessage from \"../components/Message/successMessage\";\r\nimport FormContainer from \"../components/FormContainer/FormContainer\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n} from \"@material-ui/core/\";\r\nimport * as userAction from \"../actions/userAction\";\r\nimport * as userConstants from \"../constants/userConstants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst Register = ({ location, history }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [verificationMessage, setVerificationMessage] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const userRegisterData = useSelector((state) => state.userRegister);\r\n\r\n  const { error, loading, message, success } = userRegisterData;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setTimeout(() => {\r\n        const redirectUrl = redirect\r\n          ? `/EmailVerification?redirect=${redirect}`\r\n          : \"/EmailVerification\";\r\n        history.push(redirectUrl);\r\n      }, 5000);\r\n    }\r\n  }, [success, history, redirect]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setVerificationMessage(\"\");\r\n    if (password !== confirmPassword) {\r\n      return setVerificationMessage(\"Passwords do not match\");\r\n    }\r\n    dispatch(userAction.Register(name, email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {error && (\r\n        <ErrorMessage\r\n          header=\"Auth Error\"\r\n          message={error}\r\n          reset={userConstants.USER_REGISTER_RESET}\r\n        />\r\n      )}\r\n      {verificationMessage !== \"\" && (\r\n        <ErrorMessage header=\"Auth Error\" message={verificationMessage} />\r\n      )}\r\n      {success && (\r\n        <SuccessMessage\r\n          header=\"Register SuccessFully\"\r\n          message={message}\r\n          reset={userConstants.USER_REGISTER_RESET}\r\n        />\r\n      )}\r\n      <Form onSubmit={handleSubmit}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"text\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"name\"\r\n          label=\"User Name\"\r\n          name=\"name\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          type=\"email\"\r\n          margin=\"normal\"\r\n          placeholder=\"ex:- JohnDoe@gmail.com\"\r\n          required\r\n          fullWidth\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          name=\"email\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          type=\"password\"\r\n          placeholder=\"***********\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          id=\"password\"\r\n          value={password}\r\n          autoComplete=\"current-password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          type=\"password\"\r\n          placeholder=\"***********\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          id=\"password\"\r\n          value={confirmPassword}\r\n          autoComplete=\"current-password\"\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          onClick={handleSubmit}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <CircularProgress\r\n              color=\"inherit\"\r\n              className={classes.prgressColor}\r\n            />\r\n          ) : (\r\n            <>Register</>\r\n          )}\r\n        </Button>\r\n      </Form>\r\n\r\n      <Row className=\"py-3\">\r\n        <Col>\r\n          Have an Account?{\" \"}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : \"/login\"}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport SuccessMessage from \"../components/Message/successMessage\";\r\nimport FormContainer from \"../components/FormContainer/FormContainer\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n} from \"@material-ui/core/\";\r\nimport * as userAction from \"../actions/userAction\";\r\nimport * as userConstants from \"../constants/userConstants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst ForgotPassword = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const forgotPasswordDetails = useSelector(\r\n    (state) => state.forgotPasswordDetails\r\n  );\r\n\r\n  const { loading, error, message, success } = forgotPasswordDetails;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userAction.forgotPassword({ email }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorMessage\r\n          header=\"Auth Error\"\r\n          message={error}\r\n          reset={userConstants.FORGOT_PASSWORD_SEND_RSET}\r\n        />\r\n      )}\r\n      {success && (\r\n        <SuccessMessage\r\n          header=\"Done\"\r\n          message={message}\r\n          reset={userConstants.FORGOT_PASSWORD_SEND_RSET}\r\n        />\r\n      )}\r\n      <FormContainer>\r\n        <h1>Forgot Password</h1>\r\n        <Form>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            type=\"email\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Your Email\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <CircularProgress\r\n                color=\"inherit\"\r\n                className={classes.prgressColor}\r\n              />\r\n            ) : (\r\n              <>Send Request</>\r\n            )}\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport SuccessMessage from \"../components/Message/successMessage\";\r\nimport FormContainer from \"../components/FormContainer/FormContainer\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n} from \"@material-ui/core/\";\r\nimport * as userAction from \"../actions/userAction\";\r\nimport * as userConstants from \"../constants/userConstants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const resetPasswordDetails = useSelector(\r\n    (state) => state.resetPasswordDetails\r\n  );\r\n\r\n  const { loading, error, message, success } = resetPasswordDetails;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(window.location.search);\r\n\r\n    const token = queryParams.get(\"token\")\r\n      ? queryParams.get(\"token\").trim()\r\n      : null;\r\n\r\n    if (token) {\r\n      setToken(token);\r\n    } else {\r\n      history.push(\"/login\");\r\n    }\r\n  }, [dispatch, token, history]);\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      setTimeout(() => {\r\n        history.push(\"/login\");\r\n      }, 3000);\r\n    }\r\n  }, [dispatch, success, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const resetPassworData = {\r\n      newPassword,\r\n      token,\r\n    };\r\n    dispatch(userAction.resetPassword(resetPassworData));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorMessage\r\n          header=\"Auth Error\"\r\n          message={error}\r\n          reset={userConstants.FORGOT_PASSWORD_SEND_RSET}\r\n        />\r\n      )}\r\n      {success && (\r\n        <SuccessMessage\r\n          header=\"Done\"\r\n          message={message}\r\n          reset={userConstants.FORGOT_PASSWORD_SEND_RSET}\r\n        />\r\n      )}\r\n      <FormContainer>\r\n        <h1>Reset Password</h1>\r\n        <Form>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"password\"\r\n            label=\"New Password\"\r\n            name=\"password\"\r\n            autoComplete=\"password\"\r\n            autoFocus\r\n            value={newPassword}\r\n            onChange={(e) => setNewPassword(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <CircularProgress\r\n                color=\"inherit\"\r\n                className={classes.prgressColor}\r\n              />\r\n            ) : (\r\n              <>Reset</>\r\n            )}\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ErrorMessage from \"../components/Message/errorMessage\";\r\nimport FormContainer from \"../components/FormContainer/FormContainer\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  makeStyles,\r\n} from \"@material-ui/core/\";\r\nimport * as userAction from \"../actions/userAction\";\r\nimport * as userConstants from \"../constants/userConstants\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  prgressColor: {\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst EmailVerification = ({ location, history }) => {\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const userAuthData = useSelector((state) => state.userLogin);\r\n\r\n  const { userInfo, error, loading } = userAuthData;\r\n\r\n  const redirect = location.search ? location.search.split(\"=\")[1] : \"/\";\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [dispatch, userInfo, redirect, history]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userAction.emailVerification(verificationCode));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error && (\r\n        <ErrorMessage\r\n          header=\"Auth Error\"\r\n          message={error}\r\n          reset={userConstants.RESET}\r\n        />\r\n      )}\r\n      <FormContainer>\r\n        <h1>Email Verification</h1>\r\n        <Form>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"code\"\r\n            label=\"Verification Code\"\r\n            name=\"code\"\r\n            autoComplete=\"code\"\r\n            autoFocus\r\n            value={verificationCode}\r\n            onChange={(e) => setVerificationCode(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            onClick={handleSubmit}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n              <CircularProgress\r\n                color=\"inherit\"\r\n                className={classes.prgressColor}\r\n              />\r\n            ) : (\r\n              <>Verify</>\r\n            )}\r\n          </Button>\r\n        </Form>\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailVerification;\r\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header/index\";\nimport Footer from \"./components/Footer/Footer\";\nimport Home from \"./pages/Home\";\nimport Product from \"./pages/Product\";\nimport Login from \"./pages/Login\";\nimport Cart from \"./pages/Cart\";\nimport PrivateRoute from \"./routes/PrivateRoute\";\nimport AdminRoute from \"./routes/AdminRoute\";\nimport Shipping from \"./pages/Shipping\";\nimport Payment from \"./pages/Payment\";\nimport Profile from \"./pages/Profile\";\nimport PlaceOrder from \"./pages/PlaceOrder\";\nimport OrderList from \"./pages/OrdersList\";\nimport ProductList from \"./pages/ProductList\";\nimport UserList from \"./pages/UserList\";\nimport EditUser from \"./pages/EditUser\";\nimport EditProduct from \"./pages/EditProduct\";\nimport Order from \"./pages/Order\";\nimport Logout from \"./pages/Logout\";\nimport Register from \"./pages/Register\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport ResetPassword from \"./pages/ResetPassword\";\nimport EmailVerification from \"./pages/EmailVerification\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Switch>\n            <Route exact={true} path=\"/\" component={Home} />\n            <Route\n              exact={true}\n              path=\"/product/:productId\"\n              component={Product}\n            />\n            <Route exact={true} path=\"/login\" component={Login} />\n            <Route exact={true} path=\"/cart\" component={Cart} />\n            <Route\n              exact={true}\n              path=\"/forgotPasssword\"\n              component={ForgotPassword}\n            />\n            <Route\n              exact={true}\n              path=\"/resetPassword\"\n              component={ResetPassword}\n            />\n            <PrivateRoute exact={true} path=\"/shipping\" component={Shipping} />\n            <PrivateRoute exact={true} path=\"/payment\" component={Payment} />\n            <PrivateRoute\n              exact={true}\n              path=\"/placeOrder\"\n              component={PlaceOrder}\n            />\n            <PrivateRoute\n              exact={true}\n              path=\"/order/:orderId\"\n              component={Order}\n            />\n            <PrivateRoute exact={true} path=\"/profile\" component={Profile} />\n            <AdminRoute\n              exact={true}\n              path=\"/admin/orderList\"\n              component={OrderList}\n            />\n            <AdminRoute\n              exact={true}\n              path=\"/admin/productList\"\n              component={ProductList}\n            />\n            <AdminRoute\n              exact={true}\n              path=\"/admin/product/:productId/edit\"\n              component={EditProduct}\n            />\n            <AdminRoute\n              exact={true}\n              path=\"/admin/userList\"\n              component={UserList}\n            />\n            <AdminRoute\n              exact={true}\n              path=\"/admin/user/:userId/edit\"\n              component={EditUser}\n            />\n            <Route exact={true} path=\"/register\" component={Register} />\n            <Route\n              exact={true}\n              path=\"/EmailVerification\"\n              component={EmailVerification}\n            />\n            <Route exact={true} path=\"/logout\" component={Logout} />\n          </Switch>\n        </Container>\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}